{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Failed Login This is only emitted if the error is not covered by the `fp` or `fu` log types",
  "properties": {
    "$event_schema": {
      "description": "Event schema meta",
      "allOf": [
        {
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "required": [
            "version"
          ],
          "type": "object"
        }
      ]
    },
    "auth0_client": {
      "anyOf": [
        {
          "properties": {
            "env": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "version"
          ],
          "type": "object"
        },
        {
          "type": "object"
        },
        {
          "items": {},
          "type": "array"
        }
      ],
      "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
    },
    "client_id": {
      "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
      "type": [
        "string",
        "null"
      ]
    },
    "client_name": {
      "description": "Client name associated with the client_id, when available. May be empty string.",
      "type": "string"
    },
    "connection": {
      "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
      "type": "string"
    },
    "connection_id": {
      "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
      "type": "string"
    },
    "description": {
      "description": "Description of the event. This can also contain a description of the issue for failure logs.",
      "type": "string"
    },
    "details": {
      "description": "Log details",
      "properties": {
        "channel": {
          "description": "Whether connection is front or back channel",
          "type": "string"
        },
        "error": {
          "properties": {
            "message": {
              "type": "string"
            },
            "oauthError": {
              "type": "string"
            },
            "payload": {
              "properties": {
                "attempt": {
                  "type": "number"
                },
                "authorized": {
                  "description": "min-length 1",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "clientID": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "attempt",
                "authorized",
                "clientID",
                "code",
                "message",
                "name",
                "status"
              ],
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "uri": {
              "type": "string"
            }
          },
          "required": [
            "message",
            "oauthError"
          ],
          "type": "object"
        },
        "qs": {
          "type": "object"
        },
        "riskAssessment": {
          "properties": {
            "assessments": {
              "properties": {
                "ImpossibleTravel": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "confidence"
                  ],
                  "type": "object"
                },
                "NewDevice": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    },
                    "details": {
                      "properties": {
                        "device": {
                          "type": "string"
                        },
                        "useragent": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "device"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "confidence"
                  ],
                  "type": "object"
                },
                "UntrustedIP": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    },
                    "details": {
                      "properties": {
                        "ip": {
                          "type": "string"
                        },
                        "matches": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "ip",
                        "matches",
                        "source"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "confidence"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "UntrustedIP"
              ],
              "type": "object"
            },
            "confidence": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "required": [
            "assessments",
            "confidence",
            "version"
          ],
          "type": "object"
        },
        "session_id": {
          "type": "string"
        },
        "stats": {
          "properties": {
            "loginsCount": {
              "description": "The number of logins this user has done, if available. Logins done with a valid username and password always increment this count, even if further steps in the process cause the login to fail (MFA, extensibility, etc.) Null values should be treated as missing data and not as 0.",
              "type": [
                "number",
                "null"
              ]
            }
          },
          "required": [
            "loginsCount"
          ],
          "type": "object"
        },
        "token_endpoint_auth_method": {
          "description": "Token endpoint authentication method",
          "type": "string"
        },
        "token_endpoint_auth_signing_alg": {
          "description": "Token endpoint authentication signing algorithm. Only available when token_endpoint_auth_method is private_key_jwt.",
          "type": "string"
        },
        "token_endpoint_auth_signing_kid": {
          "description": "Key ID used to sign client_assertions sent to upstream IdP. Only available when token_endpoint_auth_method is private_key_jwt.",
          "type": "string"
        },
        "triggered_by_session_transfer_token": {
          "description": "Whether a Session Transfer Token was used for authentication",
          "type": "boolean"
        }
      },
      "required": [
        "error"
      ],
      "type": "object"
    },
    "hostname": {
      "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
      "type": "string"
    },
    "identity_user_id": {
      "description": "ID for the user as reported by the IdP.",
      "type": "string"
    },
    "ip": {
      "anyOf": [
        {
          "format": "ipv4",
          "type": "string"
        },
        {
          "format": "ipv6",
          "type": "string"
        }
      ],
      "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
    },
    "log_id": {
      "description": "Log id",
      "type": "string"
    },
    "organization_id": {
      "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
      "type": "string"
    },
    "organization_name": {
      "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
      "type": "string"
    },
    "scope": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "string"
        }
      ],
      "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
    },
    "strategy": {
      "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
      "examples": [
        [
          "auth0",
          "waad",
          "oktawic",
          "google-oauth2"
        ]
      ],
      "type": "string"
    },
    "strategy_type": {
      "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
      "examples": [
        [
          "database",
          "social",
          "enterprise"
        ]
      ],
      "type": "string"
    },
    "tenant_name": {
      "description": "Tenant name",
      "type": "string"
    },
    "type": {
      "const": "f",
      "description": "Failed Login",
      "type": "string"
    },
    "user_agent": {
      "description": "The user_agent behind this log, when available",
      "examples": [
        "Chrome 120.0.0 / Mac OS X 10.15.7"
      ],
      "type": "string"
    },
    "user_id": {
      "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
      "type": "string"
    },
    "user_name": {
      "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
      "examples": [
        [
          "example@example.com",
          "+14155554321"
        ]
      ],
      "type": "string"
    }
  },
  "required": [
    "client_name",
    "description",
    "details",
    "hostname",
    "ip",
    "log_id",
    "strategy",
    "strategy_type",
    "tenant_name",
    "type"
  ],
  "type": "object"
}
