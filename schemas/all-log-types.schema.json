{
  "$ref": "#/definitions/TenantLog",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ActionExecutions": {
      "properties": {
        "executions": {
          "description": "List of executions triggered by this auth flow. Executions can be retrieved with https://auth0.com/docs/api/management/v2/actions/get-execution",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "executions"
      ],
      "type": "object"
    },
    "Auth0ClientProp": {
      "properties": {
        "env": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "version"
      ],
      "type": "object"
    },
    "AuthDetailsBase": {
      "properties": {
        "actions": {
          "$ref": "#/definitions/ActionExecutions"
        },
        "completedAt": {
          "type": "number"
        },
        "elapsedTime": {
          "type": [
            "number",
            "null"
          ]
        },
        "initiatedAt": {
          "type": "number"
        },
        "prompts": {
          "items": {
            "$ref": "#/definitions/AuthPrompt"
          },
          "type": "array"
        },
        "riskAssessment": {
          "$ref": "#/definitions/RiskAssessment"
        },
        "session_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthPrompt": {
      "properties": {
        "coi": {
          "type": "string"
        },
        "completedAt": {
          "type": "number"
        },
        "connection": {
          "type": "string"
        },
        "connection_id": {
          "type": "string"
        },
        "cov": {
          "type": "string"
        },
        "elapsedTime": {
          "type": [
            "number",
            "null"
          ]
        },
        "flow": {
          "type": "string"
        },
        "grantInfo": {
          "properties": {
            "audience": {
              "type": "string"
            },
            "expiration": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "type": [
            "string",
            "number"
          ]
        },
        "initiatedAt": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "passwordless_amr": {
          "type": "string"
        },
        "performed_acr": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "performed_amr": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "provider": {
          "type": [
            "string",
            "null"
          ]
        },
        "requiredCaptcha": {
          "type": "boolean"
        },
        "session": {
          "type": "boolean"
        },
        "session_id": {
          "type": "string"
        },
        "stats": {
          "$ref": "#/definitions/LoginsCountStats"
        },
        "strategy": {
          "type": "string"
        },
        "timers": {
          "properties": {
            "rules": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      },
      "required": [
        "requiredCaptcha",
        "session_id"
      ],
      "type": "object"
    },
    "FlowsExecutionCompletedDetails": {
      "properties": {
        "execution_id": {
          "type": "string"
        },
        "flow_id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "execution_id",
        "flow_id",
        "state"
      ],
      "type": "object"
    },
    "FlowsExecutionFailedDetails": {
      "properties": {
        "error": {
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        },
        "execution_id": {
          "type": "string"
        },
        "flow_id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "error",
        "execution_id",
        "flow_id",
        "state"
      ],
      "type": "object"
    },
    "FormsSubmissionFailedDetails": {
      "properties": {
        "error": {
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        },
        "form_id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "error",
        "form_id",
        "state"
      ],
      "type": "object"
    },
    "FormsSubmissionSucceededDetails": {
      "properties": {
        "form_id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "form_id",
        "state"
      ],
      "type": "object"
    },
    "GdDetails": {
      "properties": {
        "authenticator": {
          "properties": {
            "id": {
              "type": [
                "string",
                "null"
              ]
            },
            "phone_number": {
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "type"
          ],
          "type": "object"
        },
        "device_id": {
          "type": "string"
        },
        "enrollment": {
          "properties": {
            "_id": {
              "type": "string"
            },
            "identifier": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "phone_number": {
              "type": [
                "string",
                "null"
              ]
            },
            "tenant": {
              "type": "string"
            },
            "user_id": {
              "type": "string"
            }
          },
          "required": [
            "_id",
            "tenant",
            "user_id"
          ],
          "type": "object"
        },
        "failure_details": {
          "properties": {
            "errorCode": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "errorCode",
            "message"
          ],
          "type": "object"
        },
        "first_factor": {
          "type": "boolean"
        },
        "provider_error": {
          "properties": {
            "errorCode": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "errorCode",
            "message"
          ],
          "type": "object"
        },
        "request": {
          "type": "object"
        },
        "response": {
          "type": "object"
        },
        "session_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GdRequest": {
      "properties": {
        "auth": {
          "properties": {
            "scopes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "strategy": {
              "type": "string"
            }
          },
          "required": [
            "scopes",
            "strategy"
          ],
          "type": "object"
        },
        "body": {
          "properties": {
            "code": {
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "type": "object"
        },
        "ip": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        }
      },
      "required": [
        "auth",
        "body",
        "ip",
        "method",
        "path",
        "query",
        "userAgent"
      ],
      "type": "object"
    },
    "IPV4": {
      "format": "ipv4",
      "type": "string"
    },
    "IPV6": {
      "format": "ipv6",
      "type": "string"
    },
    "LoginsCountStats": {
      "properties": {
        "loginsCount": {
          "description": "The number of logins this user has done, if available. Logins done with a valid username and password always increment this count, even if further steps in the process cause the login to fail (MFA, extensibility, etc.) Null values should be treated as missing data and not as 0.",
          "type": [
            "number",
            "null"
          ]
        }
      },
      "required": [
        "loginsCount"
      ],
      "type": "object"
    },
    "OAuthError": {
      "properties": {
        "message": {
          "type": "string"
        },
        "oauthError": {
          "type": "string"
        },
        "payload": {
          "properties": {
            "attempt": {
              "type": "number"
            },
            "authorized": {
              "description": "min-length 1",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "clientID": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "required": [
            "attempt",
            "authorized",
            "clientID",
            "code",
            "message",
            "name",
            "status"
          ],
          "type": "object"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "oauthError"
      ],
      "type": "object"
    },
    "OrganizationMembershipReason": {
      "enum": [
        "invitation",
        "auto_membership"
      ],
      "type": "string"
    },
    "RiskAssessment": {
      "properties": {
        "assessments": {
          "properties": {
            "ImpossibleTravel": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "confidence"
              ],
              "type": "object"
            },
            "NewDevice": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                },
                "details": {
                  "properties": {
                    "device": {
                      "type": "string"
                    },
                    "useragent": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "device"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "code",
                "confidence"
              ],
              "type": "object"
            },
            "UntrustedIP": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                },
                "details": {
                  "properties": {
                    "ip": {
                      "type": "string"
                    },
                    "matches": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ip",
                    "matches",
                    "source"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "code",
                "confidence"
              ],
              "type": "object"
            }
          },
          "required": [
            "UntrustedIP"
          ],
          "type": "object"
        },
        "confidence": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "assessments",
        "confidence",
        "version"
      ],
      "type": "object"
    },
    "SchemaMeta": {
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "required": [
        "version"
      ],
      "type": "object"
    },
    "SignupDetails": {
      "properties": {
        "actions": {
          "$ref": "#/definitions/ActionExecutions"
        },
        "body": {
          "properties": {
            "app_metadata": {
              "type": "object"
            },
            "blocked": {
              "type": "boolean"
            },
            "client_id": {
              "type": "string"
            },
            "connection": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "email_verified": {
              "type": "boolean"
            },
            "family_name": {
              "type": "string"
            },
            "given_name": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nickname": {
              "type": "string"
            },
            "organization": {
              "properties": {
                "branding": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "display_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "metadata": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "password": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "phone_verified": {
              "type": "boolean"
            },
            "picture": {
              "type": "string"
            },
            "request_language": {
              "type": "string"
            },
            "tenant": {
              "type": "string"
            },
            "transaction": {
              "properties": {
                "acr_values": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  ]
                },
                "id": {
                  "type": "string"
                },
                "locale": {
                  "type": "string"
                },
                "login_hint": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "prompt": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "protocol": {
                  "type": "string"
                },
                "redirect_uri": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "requested_scopes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "response_mode": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "response_type": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "state": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ui_locales": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "user-agent": {
              "type": "string"
            },
            "user_id": {
              "type": "string"
            },
            "user_metadata": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "completedAt": {
          "type": "number"
        },
        "elapsedTime": {
          "type": [
            "number",
            "null"
          ]
        },
        "initiatedAt": {
          "type": "number"
        },
        "prompts": {
          "items": {
            "$ref": "#/definitions/AuthPrompt"
          },
          "type": "array"
        },
        "riskAssessment": {
          "$ref": "#/definitions/RiskAssessment"
        },
        "session_id": {
          "type": "string"
        }
      },
      "required": [
        "body"
      ],
      "type": "object"
    },
    "SsSsoFlowType": {
      "enum": [
        "create",
        "update"
      ],
      "type": "string"
    },
    "TenantLog": {
      "anyOf": [
        {
          "$ref": "#/definitions/acls_summary"
        },
        {
          "$ref": "#/definitions/actions_execution_failed"
        },
        {
          "$ref": "#/definitions/appi"
        },
        {
          "$ref": "#/definitions/api_limit"
        },
        {
          "$ref": "#/definitions/api_limit_warning"
        },
        {
          "$ref": "#/definitions/ciba_start_succeeded"
        },
        {
          "$ref": "#/definitions/ciba_start_failed"
        },
        {
          "$ref": "#/definitions/ciba_exchange_succeeded"
        },
        {
          "$ref": "#/definitions/ciba_exchange_failed"
        },
        {
          "$ref": "#/definitions/cls"
        },
        {
          "$ref": "#/definitions/cs"
        },
        {
          "$ref": "#/definitions/depnote"
        },
        {
          "$ref": "#/definitions/f"
        },
        {
          "$ref": "#/definitions/fce"
        },
        {
          "$ref": "#/definitions/fco"
        },
        {
          "$ref": "#/definitions/fcoa"
        },
        {
          "$ref": "#/definitions/fcp"
        },
        {
          "$ref": "#/definitions/fcph"
        },
        {
          "$ref": "#/definitions/fcpn"
        },
        {
          "$ref": "#/definitions/fcpr"
        },
        {
          "$ref": "#/definitions/fcpro"
        },
        {
          "$ref": "#/definitions/fcu"
        },
        {
          "$ref": "#/definitions/fd"
        },
        {
          "$ref": "#/definitions/fdeac"
        },
        {
          "$ref": "#/definitions/fdeaz"
        },
        {
          "$ref": "#/definitions/fdecc"
        },
        {
          "$ref": "#/definitions/fdu"
        },
        {
          "$ref": "#/definitions/feacft"
        },
        {
          "$ref": "#/definitions/feccft"
        },
        {
          "$ref": "#/definitions/fecte"
        },
        {
          "$ref": "#/definitions/fede"
        },
        {
          "$ref": "#/definitions/federated_logout_failed"
        },
        {
          "$ref": "#/definitions/fens"
        },
        {
          "$ref": "#/definitions/feoobft"
        },
        {
          "$ref": "#/definitions/feotpft"
        },
        {
          "$ref": "#/definitions/fepft"
        },
        {
          "$ref": "#/definitions/fepotpft"
        },
        {
          "$ref": "#/definitions/fercft"
        },
        {
          "$ref": "#/definitions/ferrt"
        },
        {
          "$ref": "#/definitions/fertft"
        },
        {
          "$ref": "#/definitions/fi"
        },
        {
          "$ref": "#/definitions/flo"
        },
        {
          "$ref": "#/definitions/fn"
        },
        {
          "$ref": "#/definitions/flows_execution_completed"
        },
        {
          "$ref": "#/definitions/flows_execution_failed"
        },
        {
          "$ref": "#/definitions/forms_submission_failed"
        },
        {
          "$ref": "#/definitions/forms_submission_succeeded"
        },
        {
          "$ref": "#/definitions/fp"
        },
        {
          "$ref": "#/definitions/fpar"
        },
        {
          "$ref": "#/definitions/fpurh"
        },
        {
          "$ref": "#/definitions/fs"
        },
        {
          "$ref": "#/definitions/fsa"
        },
        {
          "$ref": "#/definitions/fu"
        },
        {
          "$ref": "#/definitions/fv"
        },
        {
          "$ref": "#/definitions/fvr"
        },
        {
          "$ref": "#/definitions/gd_auth_email_verification"
        },
        {
          "$ref": "#/definitions/gd_auth_failed"
        },
        {
          "$ref": "#/definitions/gd_auth_rejected"
        },
        {
          "$ref": "#/definitions/gd_auth_succeed"
        },
        {
          "$ref": "#/definitions/gd_enrollment_complete"
        },
        {
          "$ref": "#/definitions/gd_otp_rate_limit_exceed"
        },
        {
          "$ref": "#/definitions/gd_recovery_failed"
        },
        {
          "$ref": "#/definitions/gd_recovery_succeed"
        },
        {
          "$ref": "#/definitions/gd_send_email"
        },
        {
          "$ref": "#/definitions/gd_send_pn"
        },
        {
          "$ref": "#/definitions/gd_send_pn_failure"
        },
        {
          "$ref": "#/definitions/gd_send_sms"
        },
        {
          "$ref": "#/definitions/gd_send_sms_failure"
        },
        {
          "$ref": "#/definitions/gd_send_voice"
        },
        {
          "$ref": "#/definitions/gd_send_voice_failure"
        },
        {
          "$ref": "#/definitions/gd_start_auth"
        },
        {
          "$ref": "#/definitions/gd_start_enroll"
        },
        {
          "$ref": "#/definitions/gd_start_enroll_failed"
        },
        {
          "$ref": "#/definitions/gd_tenant_update"
        },
        {
          "$ref": "#/definitions/gd_unenroll"
        },
        {
          "$ref": "#/definitions/gd_update_device_account"
        },
        {
          "$ref": "#/definitions/gd_webauthn_challenge_failed"
        },
        {
          "$ref": "#/definitions/gd_webauthn_enrollment_failed"
        },
        {
          "$ref": "#/definitions/kms_key_management_success"
        },
        {
          "$ref": "#/definitions/kms_key_management_failure"
        },
        {
          "$ref": "#/definitions/kms_key_state_changed"
        },
        {
          "$ref": "#/definitions/limit_delegation"
        },
        {
          "$ref": "#/definitions/limit_mu"
        },
        {
          "$ref": "#/definitions/limit_sul"
        },
        {
          "$ref": "#/definitions/limit_wc"
        },
        {
          "$ref": "#/definitions/mfar"
        },
        {
          "$ref": "#/definitions/mgmt_api_read"
        },
        {
          "$ref": "#/definitions/oidc_backchannel_logout_failed"
        },
        {
          "$ref": "#/definitions/oidc_backchannel_logout_succeeded"
        },
        {
          "$ref": "#/definitions/organization_member_added"
        },
        {
          "$ref": "#/definitions/pla"
        },
        {
          "$ref": "#/definitions/pwd_leak"
        },
        {
          "$ref": "#/definitions/passkey_challenge_started"
        },
        {
          "$ref": "#/definitions/passkey_challenge_failed"
        },
        {
          "$ref": "#/definitions/reset_pwd_leak"
        },
        {
          "$ref": "#/definitions/resource_cleanup"
        },
        {
          "$ref": "#/definitions/rich_consents_access_error"
        },
        {
          "$ref": "#/definitions/s"
        },
        {
          "$ref": "#/definitions/sapi"
        },
        {
          "$ref": "#/definitions/sce"
        },
        {
          "$ref": "#/definitions/scoa"
        },
        {
          "$ref": "#/definitions/scp"
        },
        {
          "$ref": "#/definitions/scpn"
        },
        {
          "$ref": "#/definitions/scpr"
        },
        {
          "$ref": "#/definitions/scu"
        },
        {
          "$ref": "#/definitions/scv"
        },
        {
          "$ref": "#/definitions/sd"
        },
        {
          "$ref": "#/definitions/sdu"
        },
        {
          "$ref": "#/definitions/seacft"
        },
        {
          "$ref": "#/definitions/seccft"
        },
        {
          "$ref": "#/definitions/secte"
        },
        {
          "$ref": "#/definitions/sede"
        },
        {
          "$ref": "#/definitions/sens"
        },
        {
          "$ref": "#/definitions/seoobft"
        },
        {
          "$ref": "#/definitions/seotpft"
        },
        {
          "$ref": "#/definitions/sepkoobft"
        },
        {
          "$ref": "#/definitions/sepkotpft"
        },
        {
          "$ref": "#/definitions/sepkrcft"
        },
        {
          "$ref": "#/definitions/sepft"
        },
        {
          "$ref": "#/definitions/sercft"
        },
        {
          "$ref": "#/definitions/sertft"
        },
        {
          "$ref": "#/definitions/si"
        },
        {
          "$ref": "#/definitions/slo"
        },
        {
          "$ref": "#/definitions/srrt"
        },
        {
          "$ref": "#/definitions/ss"
        },
        {
          "$ref": "#/definitions/ss_sso_success"
        },
        {
          "$ref": "#/definitions/ss_sso_failure"
        },
        {
          "$ref": "#/definitions/ss_sso_info"
        },
        {
          "$ref": "#/definitions/ssa"
        },
        {
          "$ref": "#/definitions/sui"
        },
        {
          "$ref": "#/definitions/sv"
        },
        {
          "$ref": "#/definitions/svr"
        },
        {
          "$ref": "#/definitions/ublkdu"
        },
        {
          "$ref": "#/definitions/universal_logout_failed"
        },
        {
          "$ref": "#/definitions/universal_logout_succeeded"
        },
        {
          "$ref": "#/definitions/w"
        },
        {
          "$ref": "#/definitions/wum"
        },
        {
          "$ref": "#/definitions/wn"
        }
      ]
    },
    "acls_summary": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "end_time": {
              "format": "date-time",
              "type": "string"
            },
            "start_time": {
              "format": "date-time",
              "type": "string"
            },
            "stats": {
              "items": {
                "properties": {
                  "acl_id": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "match": {
                    "properties": {
                      "successes": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "successes"
                    ],
                    "type": "object"
                  },
                  "priority": {
                    "type": "number"
                  },
                  "total_request_count": {
                    "properties": {
                      "successes": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "successes"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "acl_id",
                  "description",
                  "priority",
                  "action"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "start_time",
            "end_time",
            "stats"
          ],
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "acls_summary",
          "description": "Network ACLs summary",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "actions_execution_failed": {
      "description": "Execution of an Action failed",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "action_error": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "stack": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "message",
                "code",
                "stack"
              ],
              "type": "object"
            },
            "action_id": {
              "type": "string"
            },
            "action_name": {
              "type": "string"
            },
            "binding_id": {
              "type": "string"
            },
            "error_class": {
              "enum": [
                "platform_error",
                "action_timeout",
                "action_error",
                "rate_limited"
              ],
              "type": "string"
            },
            "execution_id": {
              "type": "string"
            },
            "trigger_id": {
              "type": "string"
            },
            "version_id": {
              "type": "string"
            }
          },
          "required": [
            "trigger_id",
            "execution_id",
            "action_id",
            "action_name",
            "version_id",
            "binding_id",
            "error_class"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "transaction_linking_id": {
          "description": "Reflects the transaction linking ID provided at the start of the auth flow, if any. Only available when using decoupled authorization flows.",
          "pattern": "^[A-Za-z0-9-_]{27}$",
          "type": "string"
        },
        "type": {
          "const": "actions_execution_failed",
          "description": "Execution of an Action failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "api_limit": {
      "description": "The maximum number of requests to the Authentication or Management APIs in given time was reached",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "limit": {
              "properties": {
                "bucket": {
                  "type": "string"
                },
                "global": {
                  "type": "boolean"
                },
                "size": {
                  "type": "number"
                }
              },
              "required": [
                "size",
                "bucket",
                "global"
              ],
              "type": "object"
            },
            "request": {
              "properties": {
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "response": {
              "type": "string"
            }
          },
          "required": [
            "limit"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "api_limit",
          "description": "Rate Limit notice on Authentication or Management API",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "api_limit_warning": {
      "description": "The limit of requests to the Authentication or Management APIs in given time is about to be reached",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "limit": {
              "properties": {
                "bucket": {
                  "type": "string"
                },
                "global": {
                  "type": "boolean"
                },
                "size": {
                  "type": "number"
                },
                "usage": {
                  "type": "number"
                }
              },
              "required": [
                "size",
                "bucket",
                "usage",
                "global"
              ],
              "type": "object"
            },
            "request": {
              "properties": {
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                }
              },
              "required": [
                "method",
                "path"
              ],
              "type": "object"
            }
          },
          "required": [
            "request",
            "limit"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "api_limit_warning",
          "description": "Rate Limit Warning notice on Authentication or Management API",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "appi": {
      "description": "API Peak Performance Rate is initiated",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "docs": {
              "type": "string"
            },
            "request": {
              "properties": {
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "response": {
              "type": "string"
            },
            "total_hours_allocated": {
              "type": "number"
            },
            "total_hours_consumed": {
              "type": "number"
            },
            "total_hours_remaining": {
              "type": "number"
            }
          },
          "required": [
            "total_hours_allocated",
            "total_hours_consumed",
            "total_hours_remaining",
            "docs"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "appi",
          "description": "Notice for API Peak Performance Initiated",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ciba_exchange_failed": {
      "description": "Failed CIBA Exchange",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "client_authentication_error": {
              "type": "string"
            },
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ciba_exchange_failed",
          "description": "Failed CIBA Exchange",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ciba_exchange_succeeded": {
      "description": "Successful CIBA Exchange",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "transaction_linking_id": {
              "description": "Reflects the ID of the consent record linked to this CIBA flow. Can be used at the /rich-consents/:id endpoint to retrieve the consent record.",
              "pattern": "^cns_[A-Za-z0-9-_]{22}$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ciba_exchange_succeeded",
          "description": "Successful CIBA Exchange",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ciba_start_failed": {
      "description": "Failed CIBA Start",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "audience": {
                  "type": "string"
                },
                "login_hint": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "client_authentication_error": {
              "type": "string"
            },
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          },
          "required": [
            "error",
            "body"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ciba_start_failed",
          "description": "Failed CIBA Start",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ciba_start_succeeded": {
      "description": "Successful CIBA Start",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "audience": {
                  "type": "string"
                },
                "login_hint": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "transaction_linking_id": {
              "description": "Reflects the ID of the consent record linked to this CIBA flow. Can be used at the /rich-consents/:id endpoint to retrieve the consent record.",
              "pattern": "^cns_[A-Za-z0-9-_]{22}$",
              "type": "string"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ciba_start_succeeded",
          "description": "Successful CIBA Start",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "cls": {
      "description": "Passwordless Login Code/Link Sent",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "authParams": {},
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "send": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "transaction": {}
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "tenant"
              ],
              "type": "object"
            },
            "link": {
              "type": "string"
            }
          },
          "required": [
            "link",
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "cls",
          "description": "Code or Link Sent for Passwordless Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "cs": {
      "description": "Passwordless Login Code Sent",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "authParams": {
                  "properties": {
                    "audience": {
                      "type": "string"
                    },
                    "redirect_uri": {
                      "type": "string"
                    },
                    "response_type": {
                      "type": "string"
                    },
                    "scope": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "audience",
                    "redirect_uri",
                    "response_type",
                    "scope",
                    "state"
                  ],
                  "type": "object"
                },
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "request_language": {
                  "type": "string"
                },
                "send": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user-agent": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "authParams",
                "client_id",
                "connection",
                "ip",
                "phone_number",
                "request_language",
                "send",
                "tenant",
                "user-agent",
                "username"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "cs",
          "description": "Code Sent for Passwordless Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "depnote": {
      "description": "Deprecation Notice",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "feature": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "documentation": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "tenant_from_host": {
                  "type": "string"
                }
              },
              "required": [
                "description",
                "documentation",
                "id",
                "name"
              ],
              "type": "object"
            },
            "method": {
              "type": "string"
            },
            "path": {
              "type": "string"
            }
          },
          "required": [
            "feature"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "depnote",
          "description": "Deprecation Notice",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "f": {
      "description": "Failed Login This is only emitted if the error is not covered by the `fp` or `fu` log types",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "channel": {
              "description": "Whether connection is front or back channel",
              "type": "string"
            },
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "grant_type": {
              "type": "string"
            },
            "qs": {
              "type": "object"
            },
            "riskAssessment": {
              "$ref": "#/definitions/RiskAssessment"
            },
            "session_id": {
              "type": "string"
            },
            "stats": {
              "$ref": "#/definitions/LoginsCountStats"
            },
            "token_endpoint_auth_method": {
              "description": "Token endpoint authentication method",
              "type": "string"
            },
            "token_endpoint_auth_signing_alg": {
              "description": "Token endpoint authentication signing algorithm. Only available when token_endpoint_auth_method is private_key_jwt.",
              "type": "string"
            },
            "token_endpoint_auth_signing_kid": {
              "description": "Key ID used to sign client_assertions sent to upstream IdP. Only available when token_endpoint_auth_method is private_key_jwt.",
              "type": "string"
            },
            "triggered_by_session_transfer_token": {
              "description": "Whether a Session Transfer Token was used for authentication",
              "type": "boolean"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "f",
          "description": "Failed Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fce": {
      "description": "Failed to change user email",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "email_verified": {
                  "type": "boolean"
                },
                "newEmail": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "email_verified",
                "newEmail",
                "tenant",
                "user_id",
                "verify"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fce",
          "description": "Failed Change Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fco": {
      "description": "Failed due to CORS. Is the origin in the Allowed Origins list for the specified application?",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "allowedOrigins": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "headers": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "host": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            },
            "originUrl": {
              "type": "string"
            },
            "originalUrl": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            },
            "webOrigins": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "xhr": {
              "type": "boolean"
            }
          },
          "required": [
            "allowedOrigins",
            "headers",
            "host",
            "method",
            "origin",
            "xhr"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fco",
          "description": "Failed due to CORS",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcoa": {
      "description": "Failed Cross-Origin Authentication",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "body": {
              "type": "object"
            },
            "connection": {
              "type": "string"
            },
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            },
            "session_connection": {
              "type": "string"
            },
            "stats": {
              "$ref": "#/definitions/LoginsCountStats"
            }
          },
          "required": [
            "error",
            "connection",
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcoa",
          "description": "Failed Cross-Origin Authentication",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcp": {
      "description": "Failed Change Password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "_csrf": {
                  "type": "string"
                },
                "confirmNewPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "ticket": {
                  "type": "string"
                }
              },
              "required": [
                "confirmNewPassword",
                "newPassword",
                "_csrf",
                "ticket"
              ],
              "type": "object"
            },
            "description": {
              "type": "string"
            },
            "query": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "markEmailAsVerified": {
                  "type": "boolean"
                },
                "newPassword": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "includeEmailInRedirect",
                "markEmailAsVerified",
                "newPassword",
                "resultUrl",
                "tenant",
                "user_id",
                "username"
              ],
              "type": "object"
            }
          },
          "required": [
            "body",
            "description",
            "query"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcp",
          "description": "Failed Change Password",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcph": {
      "description": "Failed Post Change Password Hook",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcph",
          "description": "Failed Post Change Password Hook",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcpn": {
      "description": "Failed Change Phone Number",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "new_phone_number": {
                  "type": "string"
                },
                "old_phone_number": {
                  "type": "string"
                },
                "phone_verified": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "new_phone_number",
                "old_phone_number",
                "phone_verified",
                "tenant",
                "user_id",
                "verify"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcpn",
          "description": "Failed Change Phone Number",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcpr": {
      "description": "Failed Change Password Request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "debug": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "requiredCaptcha": {
                  "type": "boolean"
                },
                "tenant": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "number"
                },
                "username": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "debug",
                "verify",
                "email",
                "tenant"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcpr",
          "description": "Failed Change Password Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcpro": {
      "description": "Failed to provision a AD/LDAP connector",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "properties": {
            "details": {
              "type": "string"
            }
          },
          "required": [
            "details"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcpro",
          "description": "Failed Connector Provisioning",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fcu": {
      "description": "Failed to change username",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "newUername": {
                  "type": "string"
                },
                "oldUsername": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "newUername",
                "oldUsername",
                "tenant",
                "user_id"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fcu",
          "description": "Failed Change Username",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fd": {
      "description": "Failed to generate delegation token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "api_type": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "grant_type": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          },
          "required": [
            "grant_type"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fd",
          "description": "Failed Delegation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fdeac": {
      "description": "Failed Device Confirmation - Device Activation Failure",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "code": {
              "type": "string"
            },
            "connection": {
              "type": "string"
            },
            "error": {
              "properties": {
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "session_id"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fdeac",
          "description": "Failed Device Confirmation - Device Activation Failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fdeaz": {
      "description": "Failed Device Confirmation - Request Failure",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "audience": {
                  "type": "string"
                },
                "client_id": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "scope"
              ],
              "type": "object"
            },
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fdeaz",
          "description": "Failed Device Confirmation - Request Failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fdecc": {
      "description": "Failed Device Confirmation - User Canceled",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "session_id"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fdecc",
          "description": "Failed Device Confirmation - User Canceled",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fdu": {
      "description": "Failed User Deletion",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "connection": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fdu",
          "description": "Failed User Deletion",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "feacft": {
      "description": "Failed to Exchange Authorization Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "code": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "transaction_linking_id": {
          "description": "Reflects the transaction linking ID provided at the start of the auth flow, if any. Only available when using decoupled authorization flows.",
          "pattern": "^[A-Za-z0-9-_]{27}$",
          "type": "string"
        },
        "type": {
          "const": "feacft",
          "description": "Failed Exchange of Authorization Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "feccft": {
      "description": "Failed exchange of Access Token for a Client Credentials Grant",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "client_authentoication_error": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "feccft",
          "description": "Failed Exchange of Access Token for a Client Credentials Grant",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fecte": {
      "description": "Failed Exchange via Custom Token Exchange",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "subject_token_type": {
              "type": "string"
            }
          },
          "required": [
            "subject_token_type"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fecte",
          "description": "Failed Exchange via Custom Token Exchange",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fede": {
      "description": "Failed to exchange Device Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fede",
          "description": "Failed Exchange of Device Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "federated_logout_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "errors": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "errors"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "federated_logout_failed",
          "description": "Failed Federated Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fens": {
      "description": "Failed exchange for Native Social Login",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "subject_token_type": {
              "type": "string"
            }
          },
          "required": [
            "subject_token_type"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fens",
          "description": "Failed Exchange for Native Social Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "feoobft": {
      "description": "Failed exchange of Password and OOB Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "feoobft",
          "description": "Failed Exchange of Password and OOB Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "feotpft": {
      "description": "Failed exchange of Password and OTP Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "feotpft",
          "description": "Failed Exchange of Password and OTP Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fepft": {
      "description": "Failed exchange of Password for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fepft",
          "description": "Failed Exchange of Password for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fepotpft": {
      "description": "Failed exchange of Passwordless OTP for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fepotpft",
          "description": "Failed Exchange of Passwordless OTP for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fercft": {
      "description": "Failed Exchange of Password and MFA Recovery Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fepotpft",
          "description": "Failed Exchange of Passwordless OTP for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ferrt": {
      "description": "Failed Exchange of Rotating Refresh Token. This could occur when reuse is detected.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "familyId": {
              "type": "string"
            },
            "latestCounter": {
              "type": "number"
            },
            "tokenCounter": {
              "type": "number"
            }
          },
          "required": [
            "familyId",
            "latestCounter",
            "tokenCounter"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ferrt",
          "description": "Failed Exchange of Rotating Refresh Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fertft": {
      "description": "Failed Exchange of Refresh Token for Access Token. This could occur if the refresh token is revoked or expired.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fertft",
          "description": "Failed Exchange of Refresh Token for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fi": {
      "description": "Failed to accept a user invitation. This could happen if the user accepts an invitation using a different email address than provided in the invitation, or due to a system failure while provisioning the invitation.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "invitation": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "invitee": {
                  "properties": {
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                },
                "inviter": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "organization_id"
                  ],
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ticket_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "created_at",
                "expires_at",
                "id",
                "invitee",
                "inviter",
                "roles",
                "ticket_id"
              ],
              "type": "object"
            }
          },
          "required": [
            "invitation"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fi",
          "description": "failed Invite Accept",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "flo": {
      "description": "Failed Logout",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "allowed_logout_url": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiated_by": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            },
            "return_to": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "allowed_logout_url",
            "return_to"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "flo",
          "description": "Failed Logout",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "flows_execution_completed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/FlowsExecutionCompletedDetails"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "flows_execution_completed",
          "description": "Flows Execution Completed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "flows_execution_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/FlowsExecutionFailedDetails"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "flows_execution_failed",
          "description": "Flows Execution Failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fn": {
      "description": "Failed Notification",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "email_type": {
              "type": "string"
            },
            "error": {
              "type": "string"
            },
            "notification_type": {
              "type": "string"
            },
            "to": {
              "type": "string"
            }
          },
          "required": [
            "email_type",
            "notification_type",
            "to"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fn",
          "description": "Failed Notification",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "forms_submission_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/FormsSubmissionFailedDetails"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "forms_submission_failed",
          "description": "Forms Submission Failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "forms_submission_succeeded": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/FormsSubmissionSucceededDetails"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "forms_submission_succeeded",
          "description": "Forms Submission Succeeded",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fp": {
      "description": "Failed login due to invalid password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "consoleOut": {},
            "error": {
              "anyOf": [
                {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "reason": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "reason"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fp",
          "description": "Failed Login - Invalid Password",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fpar": {
      "description": "Failed Push Authorization Request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            },
            "riskAssessment": {
              "$ref": "#/definitions/RiskAssessment"
            },
            "session_id": {
              "type": "string"
            },
            "stats": {
              "$ref": "#/definitions/LoginsCountStats"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fpar",
          "description": "Failed Push Authorization Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fpurh": {
      "description": "Failed Post User Registration Hook",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fpurh",
          "description": "Failed Post User Registration Hook",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fs": {
      "description": "Failed Signup",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "grant_type": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "phone_risk_assessment": {
              "properties": {
                "country_code": {
                  "type": "number"
                },
                "is_valid": {
                  "type": "boolean"
                },
                "line_type": {
                  "type": "string"
                },
                "risk_level": {
                  "type": "string"
                }
              },
              "required": [
                "line_type",
                "risk_level",
                "country_code",
                "is_valid"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fs",
          "description": "Failed Signup",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fsa": {
      "description": "Failed Silent Auth",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fsa",
          "description": "Failed Silent Auth",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fu": {
      "description": "Failed login due to invalid username",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fu",
          "description": "Failed Login - Invalid username",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "fv": {
      "description": "Failed to send verification email",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "body": {
          "type": "object"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "tenant": {
                  "type": "string"
                },
                "ticket": {
                  "type": "string"
                }
              },
              "required": [
                "tenant",
                "ticket"
              ],
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "query": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "idp_user_id",
                "includeEmailInRedirect",
                "resultUrl",
                "tenant",
                "user_id"
              ],
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "query"
          ],
          "type": "object"
        },
        "email": {
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "query": {
          "type": "object"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "fv",
          "description": "Failed Verification Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "body",
        "client_name",
        "description",
        "details",
        "email",
        "ip",
        "log_id",
        "query",
        "strategy",
        "strategy_type",
        "tenant_name",
        "title",
        "type"
      ],
      "type": "object"
    },
    "fvr": {
      "description": "Failed to proces verification email request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "job_id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "template": {
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "tenant": {
                  "type": "string"
                },
                "to": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "number"
                },
                "user_id": {
                  "type": "string"
                },
                "verificationUrl": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "fvr",
          "description": "Failed Verification Email Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_email_verification": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_email_verification",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_failed": {
      "description": "Multi-factor authentication failed. This could happen due to a wrong code entered for SMS/Voice/Email/TOTP factors, or a system failure.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "authenticator": {
              "properties": {
                "id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "phone_number": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "type": "object"
            },
            "device_id": {
              "type": "string"
            },
            "enrollment": {
              "properties": {
                "_id": {
                  "type": "string"
                },
                "identifier": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phone_number": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "tenant",
                "user_id"
              ],
              "type": "object"
            },
            "failure_details": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "errorCode",
                "message"
              ],
              "type": "object"
            },
            "first_factor": {
              "type": "boolean"
            },
            "provider_error": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "errorCode",
                "message"
              ],
              "type": "object"
            },
            "request": {
              "$ref": "#/definitions/GdRequest"
            },
            "response": {
              "type": "object"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "request",
            "response"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_rejected": {
      "description": "User rejected a multi-factor authentication request via push-notification",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_rejected",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_succeed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_succeed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_enrollment_complete": {
      "description": "A first time MFA user has successfully enrolled using one of the factors",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_enrollment_complete",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_otp_rate_limit_exceed": {
      "description": "A user, during enrollment or authentication, enters an incorrect code more than the maximum allowed number of times. Ex: A user enrolling in SMS enters the 6-digit code wrong more than 10 times in a row.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_otp_rate_limit_exceed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_recovery_failed": {
      "description": "A user entered a wrong Recovery Code when attempting to authenticate",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_recovery_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_recovery_succeed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_recovery_succeed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_email": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_pn": {
      "description": "Push notification for MFA sent successfully sent",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_pn",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_pn_failure": {
      "description": "Push notification for MFA failed",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_pn_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_sms": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_sms",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_sms_failure": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_sms_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_voice": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_voice",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_send_voice_failure": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_send_voice_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_start_auth": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_start_auth",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_start_enroll": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_start_enroll",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_start_enroll_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_start_enroll_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_tenant_update": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_tenant_update",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_unenroll": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_unenroll",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_update_device_account": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_update_device_account",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_webauthn_challenge_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_webauthn_challenge_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "gd_webauthn_enrollment_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "gd_webauthn_enrollment_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "kms_key_management_failure": {
      "description": "Failed KMS API operation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "kms_key_management_failure",
          "description": "Failed KMS API operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "kms_key_management_success": {
      "description": "Successful KMS API operation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "id": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "kms_key_management_success",
          "description": "Successful KMS API operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "kms_key_state_changed": {
      "description": "KMS key state change",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "id": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "type",
            "state"
          ],
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "kms_key_state_changed",
          "description": "KMS key state change",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "limit_delegation": {
      "description": "A user is temporarily prevented from logging in because of too many delegation requests",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "limit_delegation",
          "description": "Blocked Account - Too many Delegation requests",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "limit_mu": {
      "description": "An IP address is blocked because it attempted too many failed logins without a successful login. Or an IP address is blocked because it attempted too many sign-ups, whether successful or failed.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "limit_mu",
          "description": "Blocked Account - Too many attempts or signups",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "limit_sul": {
      "description": "A user is temporarily prevented from logging in because they reached the maximum logins per time period from the same IP address",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "limit_sul",
          "description": "Blocked Account - Logins per IP",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "limit_wc": {
      "description": "An IP address is blocked because it reached the maximum failed login attempts into a single account.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "limit_wc",
          "description": "Blocked Account - Failed Logins",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "mfar": {
      "description": "A user has been prompted for multi-factor authentication (MFA). When using Adaptive MFA, Auth0 includes details about the risk assessment",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "assessments": {
              "properties": {
                "ImpossibleTravel": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "confidence"
                  ],
                  "type": "object"
                },
                "UntrustedIP": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    },
                    "details": {
                      "properties": {
                        "ip": {
                          "type": "string"
                        },
                        "matches": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "ip",
                        "matches",
                        "source"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "confidence",
                    "details"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "confidence": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "required": [
            "confidence",
            "version"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "mfar",
          "description": "MFA Required",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "mgmt_api_read": {
      "description": "Successful GET request on the management API. This event will only be emitted if a secret is returned.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "accessedSecrets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "request": {
              "properties": {
                "auth": {
                  "properties": {
                    "credentials": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        },
                        {
                          "properties": {
                            "jti": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "strategy": {
                      "type": "string"
                    },
                    "user": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "user_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "name"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "required": [
                    "credentials",
                    "strategy",
                    "user"
                  ],
                  "type": "object"
                },
                "channel": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "query": {
                  "type": "object"
                },
                "userAgent": {
                  "type": "string"
                }
              },
              "required": [
                "auth",
                "channel",
                "ip",
                "method",
                "path",
                "query",
                "userAgent"
              ],
              "type": "object"
            },
            "response": {
              "properties": {
                "body": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "items": {},
                      "type": "array"
                    }
                  ]
                },
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode",
                "body"
              ],
              "type": "object"
            }
          },
          "required": [
            "accessedSecrets",
            "request",
            "response"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "references": {
          "description": "Content of the `x-correlation-id` header associated with the management API call, if the feature is enabled",
          "properties": {
            "correlation_id": {
              "maxLength": 64,
              "type": "string"
            }
          },
          "required": [
            "correlation_id"
          ],
          "type": "object"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "mgmt_api_read",
          "description": "Management API Read Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "oidc_backchannel_logout_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "errors": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiator": {
              "type": "string"
            },
            "request": {
              "properties": {
                "backchannel_logout_uri": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                }
              },
              "required": [
                "method",
                "backchannel_logout_uri"
              ],
              "type": "object"
            },
            "response": {
              "properties": {
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode"
              ],
              "type": "object"
            }
          },
          "required": [
            "request",
            "response",
            "initiator"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "oidc_backchannel_logout_failed",
          "description": "Failed OIDC Back-Channel Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "oidc_backchannel_logout_succeeded": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "errors": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiator": {
              "type": "string"
            },
            "request": {
              "properties": {
                "backchannel_logout_uri": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                }
              },
              "required": [
                "method",
                "backchannel_logout_uri"
              ],
              "type": "object"
            },
            "response": {
              "properties": {
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode"
              ],
              "type": "object"
            }
          },
          "required": [
            "request",
            "response",
            "initiator"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "oidc_backchannel_logout_succeeded",
          "description": "Successful OIDC Back-Channel Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "organization_member_added": {
      "description": "Organization Member Added Operation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "reason": {
              "$ref": "#/definitions/OrganizationMembershipReason"
            }
          },
          "required": [
            "reason"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "organization_member_added",
          "description": "Organization Member Added Operation *",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "passkey_challenge_failed": {
      "description": "A native passkey challenge failed",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "passkey_challenge_failed",
          "description": "A native passkey challenge failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "passkey_challenge_started": {
      "description": "A native passkey challenge was successfully initiated",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/AuthDetailsBase"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "passkey_challenge_started",
          "description": "A native passkey challenge was successfully initiated",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "pla": {
      "description": "Generated before a login and helps in monitoring the behavior of bot detection without having to enable it.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "ipOnAllowlist": {
              "type": "boolean"
            },
            "requiresVerification": {
              "type": "boolean"
            },
            "requiresVerificationForSignupFlow": {
              "type": "boolean"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "ipOnAllowlist",
            "requiresVerification",
            "session_id"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "pla",
          "description": "Pre-Login Assessment",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "pwd_leak": {
      "description": "Someone behind the IP address ip attempted to login with a leaked password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "pwd_leak",
          "description": "Breached Password - Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "reset_pwd_leak": {
      "description": "Someone behind the IP address ip attempted to reset with a leaked password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "reset_pwd_leak",
          "description": "Breached Password - Reset",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "resource_cleanup": {
      "description": "Emitted when resources exceeding defined limits were removed. Normally related to refresh tokens",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "endCount": {
              "type": "number"
            },
            "removedCount": {
              "type": "number"
            },
            "resource": {
              "type": "string"
            },
            "start": {
              "type": "number"
            }
          },
          "required": [
            "start",
            "removedCount",
            "endCount"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "resource_cleanup",
          "description": "Refresh Token Excess Warning",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "rich_consents_access_error": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            },
            "requestedRichConsentId": {
              "type": "string"
            }
          },
          "required": [
            "error",
            "requestedRichConsentId"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "rich_consents_access_error",
          "description": "Failed get rich consent record request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "s": {
      "description": "Successful Login",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "channel": {
              "description": "Whether connection is front or back channel",
              "type": "string"
            },
            "completedAt": {
              "type": "number"
            },
            "elapsedTime": {
              "type": [
                "number",
                "null"
              ]
            },
            "initiatedAt": {
              "type": "number"
            },
            "prompts": {
              "items": {
                "$ref": "#/definitions/AuthPrompt"
              },
              "type": "array"
            },
            "riskAssessment": {
              "$ref": "#/definitions/RiskAssessment"
            },
            "session_id": {
              "type": "string"
            },
            "token_endpoint_auth_method": {
              "description": "Token endpoint authentication method",
              "type": "string"
            },
            "token_endpoint_auth_signing_alg": {
              "description": "Token endpoint authentication signing algorithm. Only available when token_endpoint_auth_method is private_key_jwt.",
              "type": "string"
            },
            "token_endpoint_auth_signing_kid": {
              "description": "Key ID used to sign client_assertions sent to upstream IdP. Only available when token_endpoint_auth_method is private_key_jwt.",
              "type": "string"
            },
            "triggered_by_session_transfer_token": {
              "description": "Whether a Session Transfer Token was used for authentication",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "s",
          "description": "Successful Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sapi": {
      "description": "Successful API Operation Only emitted by the Management API on POST, DELETE, PATCH, and PUT",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "accessedSecrets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "request": {
              "type": "object"
            },
            "response": {
              "type": "object"
            }
          },
          "required": [
            "request",
            "response"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "references": {
          "description": "Content of the `x-correlation-id` header associated with the management API call, if the feature is enabled",
          "properties": {
            "correlation_id": {
              "maxLength": 64,
              "type": "string"
            }
          },
          "required": [
            "correlation_id"
          ],
          "type": "object"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sapi",
          "description": "Successful API Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sce": {
      "description": "Successful Change Email",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "email_verified": {
                  "type": "string"
                },
                "newEmail": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "email_verified",
                "newEmail",
                "user_id",
                "tenant",
                "verify"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sce",
          "description": "Successful Change Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "scoa": {
      "description": "Successful Cross-Origin Authentication",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "completedAt": {
              "type": "number"
            },
            "elapsedTime": {
              "type": [
                "number",
                "null"
              ]
            },
            "initiatedAt": {
              "type": "number"
            },
            "prompts": {
              "items": {
                "$ref": "#/definitions/AuthPrompt"
              },
              "type": "array"
            },
            "riskAssessment": {
              "$ref": "#/definitions/RiskAssessment"
            },
            "session_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "scoa",
          "description": "Successful Cross-Origin Authentication",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "scp": {
      "description": "Successful Change Password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "query": {
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "scp",
          "description": "Successful Change Password",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "scpn": {
      "description": "Successful Change Phone Number",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "new_phone_number": {
                  "type": "string"
                },
                "old_phone_number": {
                  "type": "string"
                },
                "phone_verified": {
                  "type": "boolean"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "scpn",
          "description": "Successful Change Phone Number",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "scpr": {
      "description": "Successful Change Password Request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "connection": {
                  "type": "string"
                },
                "debug": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "markEmailAsVerified": {
                  "type": "boolean"
                },
                "newPassword": {
                  "type": "string"
                },
                "requiredCaptcha": {
                  "type": "boolean"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "resetUrl": {
              "type": "string"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "scpr",
          "description": "Successful Change Password Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "scu": {
      "description": "Successful Change Username",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "newUsername": {
                  "type": "string"
                },
                "oldUsername": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "newUsername",
                "oldUsername"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "scu",
          "description": "Successful Change Username",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "scv": {
      "description": "Successful Credential Validation.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/AuthDetailsBase"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "scv",
          "description": "Successful Credential Validation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sd": {
      "description": "Successful Delegation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "api_type": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "grant_type": {
              "type": "string"
            },
            "scope": {
              "type": [
                "string",
                "null"
              ]
            },
            "target": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sd",
          "description": "Successful Delegation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sdu": {
      "description": "Successful User Deletion",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "connection": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sdu",
          "description": "Successful User Deletion",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "seacft": {
      "description": "Successful Exchange of Authorization Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "transaction_linking_id": {
          "description": "Reflects the transaction linking ID provided at the start of the auth flow, if any. Only available when using decoupled authorization flows.",
          "pattern": "^[A-Za-z0-9-_]{27}$",
          "type": "string"
        },
        "type": {
          "const": "seacft",
          "description": "Successful Exchange of Authorization Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "seccft": {
      "description": "Successful Exchange of Access Token for a Client Credentials Grant",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            },
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "seccft",
          "description": "Successful Exchange of Access Token for a Client Credentials Grant",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "secte": {
      "description": "Successful Exchange via Custom Token Exchange",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            },
            "subject_token_type": {
              "type": "string"
            }
          },
          "required": [
            "subject_token_type"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "secte",
          "description": "Successful Exchange via Custom Token Exchange",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sede": {
      "description": "Successful Exchange of Device Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sede",
          "description": "Successful Exchange of Device Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sens": {
      "description": "Successful Exchange - Native Social Login",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            },
            "subject_token_type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sens",
          "description": "Successful Exchange Native Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "seoobft": {
      "description": "Successful Exchange of Password and OOB Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "seoobft",
          "description": "Successful Exchange of Password and OOB Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "seotpft": {
      "description": "Successful Exchange of Password and OTP Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "seotpft",
          "description": "Successful Exchange of Password and OTP Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sepft": {
      "description": "Successful Exchange of Password for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            },
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sepft",
          "description": "Successful Exchange of Password for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sepkoobft": {
      "description": "Successful Exchange of Passkey and OOB Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sepkoobft",
          "description": "Successful Exchange of Passkey and OOB Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sepkotpft": {
      "description": "Successful Exchange of Passkey and OTP Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sepkotpft",
          "description": "Successful Exchange of Passkey and OTP Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sepkrcft": {
      "description": "Successful Exchange of Passkey and MFA Recovery Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sepkrcft",
          "description": "Successful Exchange of Passkey and MFA Recovery Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sercft": {
      "description": "Successful Exchange of Password and MFA Recovery Codeode for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sercft",
          "description": "Successful Exchange of Password and MFA Recovery Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sertft": {
      "description": "Successful Exchange of Refresh Token for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "access_token_jti": {
              "type": "string"
            },
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "audience": {
              "type": "string"
            },
            "familyId": {
              "type": "string"
            },
            "tokenCounter": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sertft",
          "description": "Successful Exchange of Refresh Token for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "si": {
      "description": "Successfully accepted a user invitation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "invitation": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "invitee": {
                  "properties": {
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                },
                "inviter": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ticket_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "invitation"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "si",
          "description": "Successful Invite Accept",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "slo": {
      "description": "Successful Logout",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "allowed_logout_url": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiated_by": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            },
            "return_to": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "slo",
          "description": "Successful Logout",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "srrt": {
      "description": "Successfully revoked a refresh token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "audience": {
              "type": "string"
            },
            "credential_id": {
              "type": "string"
            },
            "grant_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "host": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "organization_id": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            },
            "originUrl": {
              "type": "string"
            },
            "originalUrl": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            },
            "xhr": {
              "type": "string"
            }
          },
          "required": [
            "credential_id"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "srrt",
          "description": "Successful Refresh Token Revocation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ss": {
      "description": "Successful Signup",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/SignupDetails"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ss",
          "description": "Successful Signup",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ss_sso_failure": {
      "description": "Failed Self-Service Single Sign-On Operation Only emitted by snake-server",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "anyOf": [
            {
              "properties": {
                "connection_name": {
                  "type": "string"
                },
                "flow_type": {
                  "$ref": "#/definitions/SsSsoFlowType"
                },
                "ss_sso_event_name": {
                  "const": "ss_sso_ticket_consumption",
                  "type": "string"
                },
                "ss_sso_tracing_id": {
                  "type": "string"
                }
              },
              "required": [
                "ss_sso_event_name"
              ],
              "type": "object"
            },
            {
              "properties": {
                "connection_name": {
                  "type": "string"
                },
                "flow_type": {
                  "$ref": "#/definitions/SsSsoFlowType"
                },
                "ss_sso_event_name": {
                  "enum": [
                    "ss_sso_ticket_generation",
                    "ss_sso_connection_creation",
                    "ss_sso_connection_update",
                    "ss_sso_enable_connection",
                    "ss_sso_add_domain",
                    "ss_sso_delete_pending_domain",
                    "ss_sso_domain_verification"
                  ],
                  "type": "string"
                },
                "ss_sso_tracing_id": {
                  "type": "string"
                }
              },
              "required": [
                "connection_name",
                "flow_type",
                "ss_sso_event_name",
                "ss_sso_tracing_id"
              ],
              "type": "object"
            }
          ],
          "description": "Log details"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ss_sso_failure",
          "description": "Failed SS-SSO Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ss_sso_info": {
      "description": "Information from a Self-Service Single Sign-On Operation Only emitted by snake-server",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "connection_name": {
              "type": "string"
            },
            "flow_type": {
              "$ref": "#/definitions/SsSsoFlowType"
            },
            "ss_sso_event_name": {
              "enum": [
                "ss_sso_try_connection_start",
                "ss_sso_try_connection_end",
                "ss_sso_flow_end"
              ],
              "type": "string"
            },
            "ss_sso_tracing_id": {
              "type": "string"
            }
          },
          "required": [
            "ss_sso_event_name",
            "ss_sso_tracing_id",
            "connection_name",
            "flow_type"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ss_sso_info",
          "description": "Information from an SS-SSO Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ss_sso_success": {
      "description": "Successful Self-Service Single Sign-On Operation Only emitted by snake-server",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "connection_name": {
              "type": "string"
            },
            "flow_type": {
              "$ref": "#/definitions/SsSsoFlowType"
            },
            "ss_sso_event_name": {
              "enum": [
                "ss_sso_ticket_generation",
                "ss_sso_ticket_consumption",
                "ss_sso_connection_creation",
                "ss_sso_connection_update",
                "ss_sso_enable_connection",
                "ss_sso_add_domain",
                "ss_sso_delete_pending_domain",
                "ss_sso_domain_verification_unsuccessful",
                "ss_sso_domain_verification_successful"
              ],
              "type": "string"
            },
            "ss_sso_tracing_id": {
              "type": "string"
            }
          },
          "required": [
            "ss_sso_event_name",
            "ss_sso_tracing_id",
            "connection_name",
            "flow_type"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ss_sso_success",
          "description": "Successful SS-SSO Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ssa": {
      "description": "Successful Silent Auth",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/AuthDetailsBase"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "session_connection": {
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ssa",
          "description": "Successful Silent Auth",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sui": {
      "description": "Successful Users Import",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "connection": {
              "type": "string"
            },
            "tenant": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sui",
          "description": "Successful Users Import",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "sv": {
      "description": "Successfully consumed email verification link",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "tenant": {
                  "type": "string"
                },
                "ticket": {
                  "type": "string"
                }
              },
              "required": [
                "tenant",
                "ticket"
              ],
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "query": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "idp_user_id",
                "includeEmailInRedirect",
                "resultUrl",
                "tenant",
                "user_id"
              ],
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "sv",
          "description": "Successful Verification Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "svr": {
      "description": "Successfully called verification email endpoint. Verification email has been queued for sending.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "job_id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "template": {
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "tenant": {
                  "type": "string"
                },
                "to": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "number"
                },
                "user_id": {
                  "type": "string"
                },
                "verificationUrl": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "svr",
          "description": "Successful Verification Email Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "ublkdu": {
      "description": "User block setup by anomaly detection has been released",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "email": {
              "type": "string"
            },
            "query": {
              "type": "object"
            },
            "request": {
              "type": "object"
            },
            "response": {
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "ublkdu",
          "description": "User login block released",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "universal_logout_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "type": "string"
            },
            "response": {
              "properties": {
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode"
              ],
              "type": "object"
            }
          },
          "required": [
            "response",
            "error"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "universal_logout_failed",
          "description": "Failed Universal Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "universal_logout_succeeded": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "universal_logout_succeeded",
          "description": "Successful Universal Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "ip",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "w": {
      "description": "A warning has happened during a login flow",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "credentials_tenant": {
              "type": "string"
            },
            "host_tenant": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "opts": {
              "properties": {
                "search": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "original_profile": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "referer": {
              "type": "string"
            },
            "request": {
              "type": "object"
            },
            "response": {
              "type": "object"
            },
            "session_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "tracking_id": {
          "type": "string"
        },
        "type": {
          "const": "w",
          "description": "Warning",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "wn": {
      "description": "Warning Notification",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "notification_channel": {
              "type": "string"
            },
            "notification_type": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "warning": {
              "type": "string"
            }
          },
          "required": [
            "notification_type",
            "notification_channel",
            "to"
          ],
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "wn",
          "description": "Warning Notifications",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    },
    "wum": {
      "description": "A warning has happened during user management related tasks",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "tenant": {
              "type": "string"
            },
            "user_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity_user_id": {
          "description": "ID for the user as reported by the IdP.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "tenant_name": {
          "description": "Tenant name",
          "type": "string"
        },
        "type": {
          "const": "wum",
          "description": "Warning User Management",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "log_id",
        "tenant_name",
        "type"
      ],
      "type": "object"
    }
  }
}
