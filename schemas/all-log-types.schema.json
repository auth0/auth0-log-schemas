{
  "$ref": "#/definitions/TenantLog",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ActionExecutions": {
      "properties": {
        "executions": {
          "description": "List of executions triggered by this auth flow. Executions can be retrieved with https://auth0.com/docs/api/management/v2/actions/get-execution",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "executions"
      ],
      "type": "object"
    },
    "Auth0ClientProp": {
      "properties": {
        "env": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "version"
      ],
      "type": "object"
    },
    "AuthDetailsBase": {
      "properties": {
        "actions": {
          "$ref": "#/definitions/ActionExecutions"
        },
        "completedAt": {
          "type": "number"
        },
        "elapsedTime": {
          "type": [
            "number",
            "null"
          ]
        },
        "initiatedAt": {
          "type": "number"
        },
        "prompts": {
          "items": {
            "$ref": "#/definitions/AuthPrompt"
          },
          "type": "array"
        },
        "riskAssessment": {
          "$ref": "#/definitions/RiskAssessment"
        },
        "session_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthPrompt": {
      "properties": {
        "coi": {
          "type": "string"
        },
        "completedAt": {
          "type": "number"
        },
        "connection": {
          "type": "string"
        },
        "connection_id": {
          "type": "string"
        },
        "cov": {
          "type": "string"
        },
        "elapsedTime": {
          "type": [
            "number",
            "null"
          ]
        },
        "flow": {
          "type": "string"
        },
        "grantInfo": {
          "properties": {
            "audience": {
              "type": "string"
            },
            "expiration": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "type": [
            "string",
            "number"
          ]
        },
        "initiatedAt": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "passwordless_amr": {
          "type": "string"
        },
        "performed_acr": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "performed_amr": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "provider": {
          "type": [
            "string",
            "null"
          ]
        },
        "requiredCaptcha": {
          "type": "boolean"
        },
        "session": {
          "type": "boolean"
        },
        "session_id": {
          "type": "string"
        },
        "stats": {
          "$ref": "#/definitions/LoginsCountStats"
        },
        "strategy": {
          "type": "string"
        },
        "timers": {
          "properties": {
            "rules": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      },
      "required": [
        "requiredCaptcha",
        "session_id"
      ],
      "type": "object"
    },
    "GdDetails": {
      "properties": {
        "authenticator": {
          "properties": {
            "id": {
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "type"
          ],
          "type": "object"
        },
        "device_id": {
          "type": "string"
        },
        "enrollment": {
          "properties": {
            "_id": {
              "type": "string"
            },
            "identifier": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "phone_number": {
              "type": [
                "string",
                "null"
              ]
            },
            "tenant": {
              "type": "string"
            },
            "user_id": {
              "type": "string"
            }
          },
          "required": [
            "_id",
            "tenant",
            "user_id"
          ],
          "type": "object"
        },
        "failure_details": {
          "properties": {
            "errorCode": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "errorCode",
            "message"
          ],
          "type": "object"
        },
        "first_factor": {
          "type": "boolean"
        },
        "provider_error": {
          "properties": {
            "errorCode": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "errorCode",
            "message"
          ],
          "type": "object"
        },
        "request": {
          "type": "object"
        },
        "response": {
          "type": "object"
        },
        "session_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GdRequest": {
      "properties": {
        "auth": {
          "properties": {
            "scopes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "strategy": {
              "type": "string"
            }
          },
          "required": [
            "scopes",
            "strategy"
          ],
          "type": "object"
        },
        "body": {
          "properties": {
            "code": {
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "type": "object"
        },
        "ip": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        }
      },
      "required": [
        "auth",
        "body",
        "ip",
        "method",
        "path",
        "query",
        "userAgent"
      ],
      "type": "object"
    },
    "IPV4": {
      "format": "ipv4",
      "type": "string"
    },
    "IPV6": {
      "format": "ipv6",
      "type": "string"
    },
    "LoginsCountStats": {
      "properties": {
        "loginsCount": {
          "description": "The number of logins this user has done, if available. Logins done with a valid username and password always increment this count, even if further steps in the process cause the login to fail (MFA, extensibility, etc.) Null values should be treated as missing data and not as 0.",
          "type": [
            "number",
            "null"
          ]
        }
      },
      "required": [
        "loginsCount"
      ],
      "type": "object"
    },
    "OAuthError": {
      "properties": {
        "message": {
          "type": "string"
        },
        "oauthError": {
          "type": "string"
        },
        "payload": {
          "properties": {
            "attempt": {
              "type": "number"
            },
            "authorized": {
              "description": "min-length 1",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "clientID": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "required": [
            "attempt",
            "authorized",
            "clientID",
            "code",
            "message",
            "name",
            "status"
          ],
          "type": "object"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "oauthError"
      ],
      "type": "object"
    },
    "RiskAssessment": {
      "properties": {
        "assessments": {
          "properties": {
            "ImpossibleTravel": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "confidence"
              ],
              "type": "object"
            },
            "NewDevice": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                },
                "details": {
                  "properties": {
                    "device": {
                      "type": "string"
                    },
                    "useragent": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "device"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "code",
                "confidence"
              ],
              "type": "object"
            },
            "UntrustedIP": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                },
                "details": {
                  "properties": {
                    "ip": {
                      "type": "string"
                    },
                    "matches": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ip",
                    "matches",
                    "source"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "code",
                "confidence"
              ],
              "type": "object"
            }
          },
          "required": [
            "UntrustedIP"
          ],
          "type": "object"
        },
        "confidence": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "assessments",
        "confidence",
        "version"
      ],
      "type": "object"
    },
    "SchemaMeta": {
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "required": [
        "version"
      ],
      "type": "object"
    },
    "SignupDetails": {
      "properties": {
        "actions": {
          "$ref": "#/definitions/ActionExecutions"
        },
        "body": {
          "properties": {
            "app_metadata": {
              "type": "object"
            },
            "blocked": {
              "type": "boolean"
            },
            "client_id": {
              "type": "string"
            },
            "connection": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "email_verified": {
              "type": "boolean"
            },
            "family_name": {
              "type": "string"
            },
            "given_name": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nickname": {
              "type": "string"
            },
            "organization": {
              "properties": {
                "branding": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "display_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "metadata": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "password": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "phone_verified": {
              "type": "boolean"
            },
            "picture": {
              "type": "string"
            },
            "request_language": {
              "type": "string"
            },
            "tenant": {
              "type": "string"
            },
            "transaction": {
              "properties": {
                "acr_values": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  ]
                },
                "id": {
                  "type": "string"
                },
                "locale": {
                  "type": "string"
                },
                "login_hint": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "prompt": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "protocol": {
                  "type": "string"
                },
                "redirect_uri": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "requested_scopes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "response_mode": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "response_type": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "state": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ui_locales": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "user-agent": {
              "type": "string"
            },
            "user_id": {
              "type": "string"
            },
            "user_metadata": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "completedAt": {
          "type": "number"
        },
        "elapsedTime": {
          "type": [
            "number",
            "null"
          ]
        },
        "initiatedAt": {
          "type": "number"
        },
        "prompts": {
          "items": {
            "$ref": "#/definitions/AuthPrompt"
          },
          "type": "array"
        },
        "riskAssessment": {
          "$ref": "#/definitions/RiskAssessment"
        },
        "session_id": {
          "type": "string"
        }
      },
      "required": [
        "body"
      ],
      "type": "object"
    },
    "TenantLog": {
      "anyOf": [
        {
          "$ref": "#/definitions/api_limit"
        },
        {
          "$ref": "#/definitions/cls"
        },
        {
          "$ref": "#/definitions/cs"
        },
        {
          "$ref": "#/definitions/depnote"
        },
        {
          "$ref": "#/definitions/f"
        },
        {
          "$ref": "#/definitions/fce"
        },
        {
          "$ref": "#/definitions/fco"
        },
        {
          "$ref": "#/definitions/fcoa"
        },
        {
          "$ref": "#/definitions/fcp"
        },
        {
          "$ref": "#/definitions/fcph"
        },
        {
          "$ref": "#/definitions/fcpn"
        },
        {
          "$ref": "#/definitions/fcpr"
        },
        {
          "$ref": "#/definitions/fcpro"
        },
        {
          "$ref": "#/definitions/fcu"
        },
        {
          "$ref": "#/definitions/fd"
        },
        {
          "$ref": "#/definitions/fdeac"
        },
        {
          "$ref": "#/definitions/fdeaz"
        },
        {
          "$ref": "#/definitions/fdecc"
        },
        {
          "$ref": "#/definitions/fdu"
        },
        {
          "$ref": "#/definitions/feacft"
        },
        {
          "$ref": "#/definitions/feccft"
        },
        {
          "$ref": "#/definitions/fede"
        },
        {
          "$ref": "#/definitions/fens"
        },
        {
          "$ref": "#/definitions/feoobft"
        },
        {
          "$ref": "#/definitions/feotpft"
        },
        {
          "$ref": "#/definitions/fepft"
        },
        {
          "$ref": "#/definitions/fepotpft"
        },
        {
          "$ref": "#/definitions/fercft"
        },
        {
          "$ref": "#/definitions/ferrt"
        },
        {
          "$ref": "#/definitions/fertft"
        },
        {
          "$ref": "#/definitions/fi"
        },
        {
          "$ref": "#/definitions/flo"
        },
        {
          "$ref": "#/definitions/fn"
        },
        {
          "$ref": "#/definitions/fp"
        },
        {
          "$ref": "#/definitions/fpar"
        },
        {
          "$ref": "#/definitions/fpurh"
        },
        {
          "$ref": "#/definitions/fs"
        },
        {
          "$ref": "#/definitions/fsa"
        },
        {
          "$ref": "#/definitions/fu"
        },
        {
          "$ref": "#/definitions/fv"
        },
        {
          "$ref": "#/definitions/fvr"
        },
        {
          "$ref": "#/definitions/gd_auth_email_verification"
        },
        {
          "$ref": "#/definitions/gd_auth_failed"
        },
        {
          "$ref": "#/definitions/gd_auth_rejected"
        },
        {
          "$ref": "#/definitions/gd_auth_succeed"
        },
        {
          "$ref": "#/definitions/gd_enrollment_complete"
        },
        {
          "$ref": "#/definitions/gd_otp_rate_limit_exceed"
        },
        {
          "$ref": "#/definitions/gd_recovery_failed"
        },
        {
          "$ref": "#/definitions/gd_recovery_succeed"
        },
        {
          "$ref": "#/definitions/gd_send_email"
        },
        {
          "$ref": "#/definitions/gd_send_email_failure"
        },
        {
          "$ref": "#/definitions/gd_send_pn"
        },
        {
          "$ref": "#/definitions/gd_send_pn_failure"
        },
        {
          "$ref": "#/definitions/gd_send_sms"
        },
        {
          "$ref": "#/definitions/gd_send_sms_failure"
        },
        {
          "$ref": "#/definitions/gd_send_voice"
        },
        {
          "$ref": "#/definitions/gd_send_voice_failure"
        },
        {
          "$ref": "#/definitions/gd_start_auth"
        },
        {
          "$ref": "#/definitions/gd_start_enroll"
        },
        {
          "$ref": "#/definitions/gd_start_enroll_failed"
        },
        {
          "$ref": "#/definitions/gd_tenant_update"
        },
        {
          "$ref": "#/definitions/gd_unenroll"
        },
        {
          "$ref": "#/definitions/gd_update_device_account"
        },
        {
          "$ref": "#/definitions/gd_webauthn_challenge_failed"
        },
        {
          "$ref": "#/definitions/gd_webauthn_enrollment_failed"
        },
        {
          "$ref": "#/definitions/limit_delegation"
        },
        {
          "$ref": "#/definitions/limit_mu"
        },
        {
          "$ref": "#/definitions/limit_sul"
        },
        {
          "$ref": "#/definitions/limit_wc"
        },
        {
          "$ref": "#/definitions/mfar"
        },
        {
          "$ref": "#/definitions/mgmt_api_read"
        },
        {
          "$ref": "#/definitions/oidc_backchannel_logout_failed"
        },
        {
          "$ref": "#/definitions/oidc_backchannel_logout_succeeded"
        },
        {
          "$ref": "#/definitions/pla"
        },
        {
          "$ref": "#/definitions/pwd_leak"
        },
        {
          "$ref": "#/definitions/resource_cleanup"
        },
        {
          "$ref": "#/definitions/s"
        },
        {
          "$ref": "#/definitions/sapi"
        },
        {
          "$ref": "#/definitions/sce"
        },
        {
          "$ref": "#/definitions/scoa"
        },
        {
          "$ref": "#/definitions/scp"
        },
        {
          "$ref": "#/definitions/scph"
        },
        {
          "$ref": "#/definitions/scpn"
        },
        {
          "$ref": "#/definitions/scpr"
        },
        {
          "$ref": "#/definitions/scu"
        },
        {
          "$ref": "#/definitions/sd"
        },
        {
          "$ref": "#/definitions/sdu"
        },
        {
          "$ref": "#/definitions/seacft"
        },
        {
          "$ref": "#/definitions/seccft"
        },
        {
          "$ref": "#/definitions/sede"
        },
        {
          "$ref": "#/definitions/sens"
        },
        {
          "$ref": "#/definitions/seoobft"
        },
        {
          "$ref": "#/definitions/seotpft"
        },
        {
          "$ref": "#/definitions/sepft"
        },
        {
          "$ref": "#/definitions/sercft"
        },
        {
          "$ref": "#/definitions/sertft"
        },
        {
          "$ref": "#/definitions/si"
        },
        {
          "$ref": "#/definitions/slo"
        },
        {
          "$ref": "#/definitions/srrt"
        },
        {
          "$ref": "#/definitions/ss"
        },
        {
          "$ref": "#/definitions/ssa"
        },
        {
          "$ref": "#/definitions/sui"
        },
        {
          "$ref": "#/definitions/sv"
        },
        {
          "$ref": "#/definitions/svr"
        },
        {
          "$ref": "#/definitions/ublkdu"
        },
        {
          "$ref": "#/definitions/w"
        }
      ]
    },
    "api_limit": {
      "description": "The maximum number of requests to the Authentication or Management APIs in given time was reached",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "request": {
              "properties": {
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "response": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "api_limit",
          "description": "Rate Limit notice on Authentication or Management API",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "cls": {
      "description": "Passwordless Login Code/Link Sent",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "authParams": {},
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "send": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "transaction": {}
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "tenant"
              ],
              "type": "object"
            },
            "link": {
              "type": "string"
            }
          },
          "required": [
            "link",
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "cls",
          "description": "Code or Link Sent for Passwordless Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "cs": {
      "description": "Passwordless Login Code Sent",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "authParams": {
                  "properties": {
                    "audience": {
                      "type": "string"
                    },
                    "redirect_uri": {
                      "type": "string"
                    },
                    "response_type": {
                      "type": "string"
                    },
                    "scope": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "audience",
                    "redirect_uri",
                    "response_type",
                    "scope",
                    "state"
                  ],
                  "type": "object"
                },
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "request_language": {
                  "type": "string"
                },
                "send": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user-agent": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "authParams",
                "client_id",
                "connection",
                "ip",
                "phone_number",
                "request_language",
                "send",
                "tenant",
                "user-agent",
                "username"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "cs",
          "description": "Code Sent for Passwordless Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "depnote": {
      "description": "Deprecation Notice",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "feature": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "documentation": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "tenant_from_host": {
                  "type": "string"
                }
              },
              "required": [
                "description",
                "documentation",
                "id",
                "name"
              ],
              "type": "object"
            },
            "method": {
              "type": "string"
            },
            "path": {
              "type": "string"
            }
          },
          "required": [
            "feature"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "depnote",
          "description": "Deprecation Notice",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "f": {
      "description": "Failed Login This is only emitted if the error is not covered by the `fp` or `fu` log types",
      "properties": {
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "details": {
          "properties": {
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            },
            "riskAssessment": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            },
            "stats": {
              "$ref": "#/definitions/LoginsCountStats"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "details",
        "hostname",
        "ip",
        "strategy",
        "strategy_type"
      ],
      "type": "object"
    },
    "fce": {
      "description": "Failed to change user email",
      "properties": {
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "details": {
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "email_verified": {
                  "type": "boolean"
                },
                "newEmail": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "email_verified",
                "newEmail",
                "tenant",
                "user_id",
                "verify"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "details",
        "strategy",
        "strategy_type"
      ],
      "type": "object"
    },
    "fco": {
      "description": "Failed due to CORS. Is the origin in the Allowed Origins list for the specified application?",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "allowedOrigins": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "headers": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "host": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            },
            "originUrl": {
              "type": "string"
            },
            "originalUrl": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            },
            "webOrigins": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "xhr": {
              "type": "boolean"
            }
          },
          "required": [
            "allowedOrigins",
            "headers",
            "host",
            "method",
            "origin",
            "xhr"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fco",
          "description": "Failed due to CORS",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fcoa": {
      "description": "Failed Cross-Origin Authentication",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "body": {
              "type": "object"
            },
            "connection": {
              "type": "string"
            },
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            },
            "session_connection": {
              "type": "string"
            },
            "stats": {
              "$ref": "#/definitions/LoginsCountStats"
            }
          },
          "required": [
            "error",
            "connection",
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fcoa",
          "description": "Failed Cross-Origin Authentication",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fcp": {
      "description": "Failed Change Password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "_csrf": {
                  "type": "string"
                },
                "confirmNewPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "ticket": {
                  "type": "string"
                }
              },
              "required": [
                "confirmNewPassword",
                "newPassword",
                "_csrf",
                "ticket"
              ],
              "type": "object"
            },
            "description": {
              "type": "string"
            },
            "query": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "markEmailAsVerified": {
                  "type": "boolean"
                },
                "newPassword": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "includeEmailInRedirect",
                "markEmailAsVerified",
                "newPassword",
                "resultUrl",
                "tenant",
                "user_id",
                "username"
              ],
              "type": "object"
            }
          },
          "required": [
            "body",
            "description",
            "query"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fcp",
          "description": "Failed Change Password",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fcph": {
      "description": "Failed Post Change Password Hook",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fcph",
          "description": "Failed Post Change Password Hook",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fcpn": {
      "description": "Failed Change Phone Number",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "new_phone_number": {
                  "type": "string"
                },
                "old_phone_number": {
                  "type": "string"
                },
                "phone_verified": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "new_phone_number",
                "old_phone_number",
                "phone_verified",
                "tenant",
                "user_id",
                "verify"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fcpn",
          "description": "Failed Change Phone Number",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fcpr": {
      "description": "Failed Change Password Request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "debug": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "number"
                },
                "username": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "debug",
                "verify",
                "email",
                "tenant"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fcpr",
          "description": "Failed Change Password Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fcpro": {
      "description": "Failed to provision a AD/LDAP connector",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "properties": {
            "details": {
              "type": "string"
            }
          },
          "required": [
            "details"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fcpro",
          "description": "Failed Connector Provisioning",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fcu": {
      "description": "Failed to change username",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "newUername": {
                  "type": "string"
                },
                "oldUsername": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "newUername",
                "oldUsername",
                "tenant",
                "user_id"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fcu",
          "description": "Failed Change Username",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fd": {
      "description": "Failed to generate delegation token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "api_type": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "grant_type": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          },
          "required": [
            "grant_type"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fd",
          "description": "Failed Delegation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fdeac": {
      "description": "Failed Device Confirmation - Device Activation Failure",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "code": {
              "type": "string"
            },
            "connection": {
              "type": "string"
            },
            "error": {
              "properties": {
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "session_id"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fdeac",
          "description": "Failed Device Confirmation - Device Activation Failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fdeaz": {
      "description": "Failed Device Confirmation - Request Failure",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "audience": {
                  "type": "string"
                },
                "client_id": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "scope"
              ],
              "type": "object"
            },
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fdeaz",
          "description": "Failed Device Confirmation - Request Failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fdecc": {
      "description": "Failed Device Confirmation - User Canceled",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "session_id"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fdecc",
          "description": "Failed Device Confirmation - User Canceled",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fdu": {
      "description": "Failed User Deletion",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "connection": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fdu",
          "description": "Failed User Deletion",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "feacft": {
      "description": "Failed to Exchange Authorization Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "code": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "transaction_linking_id": {
          "description": "Reflects the transaction linking ID provided at the start of the auth flow, if any. Only available when using decoupled authorization flows.",
          "pattern": "^[A-Za-z0-9-_]{27}$",
          "type": "string"
        },
        "type": {
          "const": "feacft",
          "description": "Failed Exchange of Authorization Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "feccft": {
      "description": "Failed exchange of Access Token for a Client Credentials Grant",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "client_authentoication_error": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "feccft",
          "description": "Failed Exchange of Access Token for a Client Credentials Grant",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fede": {
      "description": "Failed to exchange Device Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fede",
          "description": "Failed Exchange of Device Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fens": {
      "description": "Failed exchange for Native Social Login",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "subject_token_type": {
              "type": "string"
            }
          },
          "required": [
            "subject_token_type"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fens",
          "description": "Failed Exchange for Native Social Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "feoobft": {
      "description": "Failed exchange of Password and OOB Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "feoobft",
          "description": "Failed Exchange of Password and OOB Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "feotpft": {
      "description": "Failed exchange of Password and OTP Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "feotpft",
          "description": "Failed Exchange of Password and OTP Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fepft": {
      "description": "Failed exchange of Password for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fepft",
          "description": "Failed Exchange of Password for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fepotpft": {
      "description": "Failed exchange of Passwordless OTP for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fepotpft",
          "description": "Failed Exchange of Passwordless OTP for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fercft": {
      "description": "Failed Exchange of Password and MFA Recovery Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fepotpft",
          "description": "Failed Exchange of Passwordless OTP for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "ferrt": {
      "description": "Failed Exchange of Rotating Refresh Token. This could occur when reuse is detected.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "familyId": {
              "type": "string"
            },
            "latestCounter": {
              "type": "number"
            },
            "tokenCounter": {
              "type": "number"
            }
          },
          "required": [
            "familyId",
            "latestCounter",
            "tokenCounter"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "ferrt",
          "description": "Failed Exchange of Rotating Refresh Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fertft": {
      "description": "Failed Exchange of Refresh Token for Access Token. This could occur if the refresh token is revoked or expired.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fertft",
          "description": "Failed Exchange of Refresh Token for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fi": {
      "description": "Failed to accept a user invitation. This could happen if the user accepts an invitation using a different email address than provided in the invitation, or due to a system failure while provisioning the invitation.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "invitation": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "invitee": {
                  "properties": {
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                },
                "inviter": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "organization_id"
                  ],
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ticket_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "created_at",
                "expires_at",
                "id",
                "invitee",
                "inviter",
                "roles",
                "ticket_id"
              ],
              "type": "object"
            }
          },
          "required": [
            "invitation"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "type": {
          "const": "fi",
          "description": "failed Invite Accept",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "flo": {
      "description": "Failed Logout",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "allowed_logout_url": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiated_by": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            },
            "return_to": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "allowed_logout_url",
            "return_to"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "flo",
          "description": "Failed Logout",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fn": {
      "description": "Failed Notification",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "email_type": {
              "type": "string"
            },
            "error": {
              "type": "string"
            },
            "to": {
              "type": "string"
            }
          },
          "required": [
            "email_type",
            "to"
          ],
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "fn",
          "description": "Failed Notification",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fp": {
      "description": "Failed login due to invalid password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "consoleOut": {},
            "error": {
              "anyOf": [
                {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "reason": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "reason"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fp",
          "description": "Failed Login - Invalid Password",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fpar": {
      "description": "Failed Push Authorization Request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "$ref": "#/definitions/OAuthError"
            },
            "qs": {
              "type": "object"
            },
            "riskAssessment": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            },
            "stats": {
              "$ref": "#/definitions/LoginsCountStats"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fpar",
          "description": "Failed Push Authorization Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fpurh": {
      "description": "Failed Post User Registration Hook",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fpurh",
          "description": "Failed Post User Registration Hook",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fs": {
      "description": "Failed Signup",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "phone_number": {
              "type": "string"
            },
            "phone_risk_assessment": {
              "properties": {
                "country_code": {
                  "type": "number"
                },
                "is_valid": {
                  "type": "boolean"
                },
                "line_type": {
                  "type": "string"
                },
                "risk_level": {
                  "type": "string"
                }
              },
              "required": [
                "line_type",
                "risk_level",
                "country_code",
                "is_valid"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fs",
          "description": "Failed Signup",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fsa": {
      "description": "Failed Silent Auth",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "fsa",
          "description": "Failed Silent Auth",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "fu": {
      "description": "Failed login due to invalid username",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fu",
          "description": "Failed Login - Invalid username",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "fv": {
      "description": "Failed to send verification email",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "body": {
          "type": "object"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "tenant": {
                  "type": "string"
                },
                "ticket": {
                  "type": "string"
                }
              },
              "required": [
                "tenant",
                "ticket"
              ],
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "query": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "idp_user_id",
                "includeEmailInRedirect",
                "resultUrl",
                "tenant",
                "user_id"
              ],
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "query"
          ],
          "type": "object"
        },
        "email": {
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "query": {
          "type": "object"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "fv",
          "description": "Failed Verification Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "body",
        "client_name",
        "description",
        "details",
        "email",
        "ip",
        "log_id",
        "query",
        "strategy",
        "strategy_type",
        "title",
        "type"
      ],
      "type": "object"
    },
    "fvr": {
      "description": "Failed to proces verification email request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "job_id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "template": {
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "tenant": {
                  "type": "string"
                },
                "to": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "number"
                },
                "user_id": {
                  "type": "string"
                },
                "verificationUrl": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "fvr",
          "description": "Failed Verification Email Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_email_verification": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_email_verification",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_failed": {
      "description": "Multi-factor authentication failed. This could happen due to a wrong code entered for SMS/Voice/Email/TOTP factors, or a system failure.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "authenticator": {
              "properties": {
                "id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "type": "object"
            },
            "device_id": {
              "type": "string"
            },
            "enrollment": {
              "properties": {
                "_id": {
                  "type": "string"
                },
                "identifier": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phone_number": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "tenant",
                "user_id"
              ],
              "type": "object"
            },
            "failure_details": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "errorCode",
                "message"
              ],
              "type": "object"
            },
            "first_factor": {
              "type": "boolean"
            },
            "provider_error": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "errorCode",
                "message"
              ],
              "type": "object"
            },
            "request": {
              "$ref": "#/definitions/GdRequest"
            },
            "response": {
              "type": "object"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "request",
            "response"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_rejected": {
      "description": "User rejected a multi-factor authentication request via push-notification",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_rejected",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_auth_succeed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_auth_succeed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_enrollment_complete": {
      "description": "A first time MFA user has successfully enrolled using one of the factors",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_enrollment_complete",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_otp_rate_limit_exceed": {
      "description": "A user, during enrollment or authentication, enters an incorrect code more than the maximum allowed number of times. Ex: A user enrolling in SMS enters the 6-digit code wrong more than 10 times in a row.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_otp_rate_limit_exceed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_recovery_failed": {
      "description": "A user entered a wrong Recovery Code when attempting to authenticate",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_recovery_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_recovery_succeed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_recovery_succeed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_email": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_email_failure": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_email_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_pn": {
      "description": "Push notification for MFA sent successfully sent",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_pn",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_pn_failure": {
      "description": "Push notification for MFA failed",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_pn_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_sms": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_sms",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_sms_failure": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_sms_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_voice": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_voice",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_send_voice_failure": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_send_voice_failure",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_start_auth": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_start_auth",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_start_enroll": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_start_enroll",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_start_enroll_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_start_enroll_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_tenant_update": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_tenant_update",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_unenroll": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_unenroll",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_update_device_account": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_update_device_account",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_webauthn_challenge_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_webauthn_challenge_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "gd_webauthn_enrollment_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/GdDetails"
            }
          ]
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "gd_webauthn_enrollment_failed",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "limit_delegation": {
      "description": "A user is temporarily prevented from logging in because of too many delegation requests",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "limit_delegation",
          "description": "Blocked Account - Too many Delegation requests",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "limit_mu": {
      "description": "An IP address is blocked because it attempted too many failed logins without a successful login. Or an IP address is blocked because it attempted too many sign-ups, whether successful or failed.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "limit_mu",
          "description": "Blocked Account - Too many attempts or signups",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "limit_sul": {
      "description": "A user is temporarily prevented from logging in because they  reached the maximum logins per time period from the same IP address",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "limit_sul",
          "description": "Blocked Account - Logins per IP",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "limit_wc": {
      "description": "An IP address is blocked because it reached the maximum failed login attempts into a single account.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "limit_wc",
          "description": "Blocked Account - Failed Logins",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "mfar": {
      "description": "A user has been prompted for multi-factor authentication (MFA). When using Adaptive MFA, Auth0 includes details about the risk assessment",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "assessments": {
              "properties": {
                "ImpossibleTravel": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "confidence"
                  ],
                  "type": "object"
                },
                "UntrustedIP": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "string"
                    },
                    "details": {
                      "properties": {
                        "ip": {
                          "type": "string"
                        },
                        "matches": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "ip",
                        "matches",
                        "source"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "confidence",
                    "details"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "confidence": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "required": [
            "confidence",
            "version"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "mfar",
          "description": "MFA Required",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "mgmt_api_read": {
      "description": "Successful GET request on the management API. This event will only be emitted if a secret is returned.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "accessedSecrets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "request": {
              "properties": {
                "auth": {
                  "properties": {
                    "credentials": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        },
                        {
                          "properties": {
                            "jti": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "strategy": {
                      "type": "string"
                    },
                    "user": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "user_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "name"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "required": [
                    "credentials",
                    "strategy",
                    "user"
                  ],
                  "type": "object"
                },
                "channel": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "query": {
                  "type": "object"
                },
                "userAgent": {
                  "type": "string"
                }
              },
              "required": [
                "auth",
                "channel",
                "ip",
                "method",
                "path",
                "query",
                "userAgent"
              ],
              "type": "object"
            },
            "response": {
              "properties": {
                "body": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "items": {},
                      "type": "array"
                    }
                  ]
                },
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode",
                "body"
              ],
              "type": "object"
            }
          },
          "required": [
            "accessedSecrets",
            "request",
            "response"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "references": {
          "description": "Content of the `x-correlation-id` header associated with the management API call, if the feature is enabled",
          "properties": {
            "correlation_id": {
              "maxLength": 64,
              "type": "string"
            }
          },
          "required": [
            "correlation_id"
          ],
          "type": "object"
        },
        "type": {
          "const": "mgmt_api_read",
          "description": "Management API Read Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "oidc_backchannel_logout_failed": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "errors": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiator": {
              "type": "string"
            },
            "request": {
              "properties": {
                "backchannel_logout_uri": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                }
              },
              "required": [
                "method",
                "backchannel_logout_uri"
              ],
              "type": "object"
            },
            "response": {
              "properties": {
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode"
              ],
              "type": "object"
            }
          },
          "required": [
            "request",
            "response",
            "initiator"
          ],
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "oidc_backchannel_logout_failed",
          "description": "Failed OIDC Back-Channel Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "oidc_backchannel_logout_succeeded": {
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "errors": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiator": {
              "type": "string"
            },
            "request": {
              "properties": {
                "backchannel_logout_uri": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                }
              },
              "required": [
                "method",
                "backchannel_logout_uri"
              ],
              "type": "object"
            },
            "response": {
              "properties": {
                "statusCode": {
                  "type": "number"
                }
              },
              "required": [
                "statusCode"
              ],
              "type": "object"
            }
          },
          "required": [
            "request",
            "response",
            "initiator"
          ],
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "oidc_backchannel_logout_succeeded",
          "description": "Successful OIDC Back-Channel Logout request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "pla": {
      "description": "Generated before a login and helps in monitoring the behavior of bot detection without having to enable it.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "ipOnAllowlist": {
              "type": "boolean"
            },
            "requiresVerification": {
              "type": "boolean"
            },
            "session_id": {
              "type": "string"
            }
          },
          "required": [
            "ipOnAllowlist",
            "requiresVerification",
            "session_id"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "pla",
          "description": "Pre-Login Assessment",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "pwd_leak": {
      "description": "Someone behind the IP address ip attempted to login with a leaked password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "pwd_leak",
          "description": "Breached Password - Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "resource_cleanup": {
      "description": "Emitted when resources exceeding defined limits were removed. Normally related to refresh tokens",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "endCount": {
              "type": "number"
            },
            "removedCount": {
              "type": "number"
            },
            "resource": {
              "type": "string"
            },
            "start": {
              "type": "number"
            }
          },
          "required": [
            "start",
            "removedCount",
            "endCount"
          ],
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "resource_cleanup",
          "description": "Refresh Token Excess Warning",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "s": {
      "description": "Successful Login",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/AuthDetailsBase"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "s",
          "description": "Successful Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "sapi": {
      "description": "Successful API Operation Only emitted by the Management API on POST, DELETE, PATCH, and PUT",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "accessedSecrets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "request": {
              "type": "object"
            },
            "response": {
              "type": "object"
            }
          },
          "required": [
            "request",
            "response"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "references": {
          "description": "Content of the `x-correlation-id` header associated with the management API call, if the feature is enabled",
          "properties": {
            "correlation_id": {
              "maxLength": 64,
              "type": "string"
            }
          },
          "required": [
            "correlation_id"
          ],
          "type": "object"
        },
        "type": {
          "const": "sapi",
          "description": "Successful API Operation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sce": {
      "description": "Successful Change Email",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "email_verified": {
                  "type": "string"
                },
                "newEmail": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "email_verified",
                "newEmail",
                "user_id",
                "tenant",
                "verify"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "sce",
          "description": "Successful Change Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "scoa": {
      "description": "Successful Cross-Origin Authentication",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "completedAt": {
              "type": "number"
            },
            "elapsedTime": {
              "type": [
                "number",
                "null"
              ]
            },
            "initiatedAt": {
              "type": "number"
            },
            "prompts": {
              "items": {
                "$ref": "#/definitions/AuthPrompt"
              },
              "type": "array"
            },
            "riskAssessment": {
              "$ref": "#/definitions/RiskAssessment"
            },
            "session_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "scoa",
          "description": "Successful Cross-Origin Authentication",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "scp": {
      "description": "Successful Change Password",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "query": {
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "scp",
          "description": "Successful Change Password",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "scph": {
      "description": "Successful Post Change Password Hook",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "context": {
              "properties": {
                "connection": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tenant": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "email": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "last_password_reset": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "scph",
          "description": "Successful Post Change Password Hook",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "scpn": {
      "description": "Successful Change Phone Number",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "new_phone_number": {
                  "type": "string"
                },
                "old_phone_number": {
                  "type": "string"
                },
                "phone_verified": {
                  "type": "boolean"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "scpn",
          "description": "Successful Change Phone Number",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "scpr": {
      "description": "Successful Change Password Request",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "connection": {
                  "type": "string"
                },
                "debug": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "markEmailAsVerified": {
                  "type": "boolean"
                },
                "newPassword": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "verify": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "resetUrl": {
              "type": "string"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "scpr",
          "description": "Successful Change Password Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "scu": {
      "description": "Successful Change Username",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "newUsername": {
                  "type": "string"
                },
                "oldUsername": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "newUsername",
                "oldUsername"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "scu",
          "description": "Successful Change Username",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "sd": {
      "description": "Successful Delegation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "api_type": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "grant_type": {
              "type": "string"
            },
            "scope": {
              "type": [
                "string",
                "null"
              ]
            },
            "target": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "sd",
          "description": "Successful Delegation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sdu": {
      "description": "Successful User Deletion",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "connection": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "sdu",
          "description": "Successful User Deletion",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "seacft": {
      "description": "Successful Exchange of Authorization Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "code": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "transaction_linking_id": {
          "description": "Reflects the transaction linking ID provided at the start of the auth flow, if any. Only available when using decoupled authorization flows.",
          "pattern": "^[A-Za-z0-9-_]{27}$",
          "type": "string"
        },
        "type": {
          "const": "seacft",
          "description": "Successful Exchange of Authorization Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "seccft": {
      "description": "Successful Exchange of Access Token for a Client Credentials Grant",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "seccft",
          "description": "Successful Exchange of Access Token for a Client Credentials Grant",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sede": {
      "description": "Successful Exchange of Device Code for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "sede",
          "description": "Successful Exchange of Device Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sens": {
      "description": "Successful Exchange - Native Social Login",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "subject_token_type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "sens",
          "description": "Successful Exchange Native Login",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "seoobft": {
      "description": "Successful Exchange of Password and OOB Challenge for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "seoobft",
          "description": "Successful Exchange of Password and OOB Challenge for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "seotpft": {
      "description": "Successful Exchange of Password and OTP Challenge for Access Token",
      "properties": {
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "hostname",
        "ip"
      ],
      "type": "object"
    },
    "sepft": {
      "description": "Successful Exchange of Password for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "sepft",
          "description": "Successful Exchange of Password for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sercft": {
      "description": "Successful Exchange of Password and MFA Recovery Codeode for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP from which we got the request. Note that this does not follow forwarded-for headers unlike the `ip` field which aims at describing the IP of the end user."
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "sercft",
          "description": "Successful Exchange of Password and MFA Recovery Code for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sertft": {
      "description": "Successful Exchange of Refresh Token for Access Token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "actions": {
              "$ref": "#/definitions/ActionExecutions"
            },
            "familyId": {
              "type": "string"
            },
            "tokenCounter": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "type": {
          "const": "sertft",
          "description": "Successful Exchange of Refresh Token for Access Token",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "auth0_client",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "si": {
      "description": "Successfully accepted a user invitation",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "invitation": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "invitee": {
                  "properties": {
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                },
                "inviter": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ticket_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "invitation"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "type": {
          "const": "si",
          "description": "Successful Invite Accept",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "slo": {
      "description": "Successful Logout",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "allowed_logout_url": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "initiated_by": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            },
            "return_to": {
              "type": "string"
            },
            "session_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "slo",
          "description": "Successful Logout",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "srrt": {
      "description": "Successfully revoked a refresh token",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "audience": {
              "type": "string"
            },
            "credential_id": {
              "type": "string"
            },
            "grant_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "host": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            },
            "originUrl": {
              "type": "string"
            },
            "originalUrl": {
              "type": "string"
            },
            "xhr": {
              "type": "string"
            }
          },
          "required": [
            "credential_id"
          ],
          "type": "object"
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "srrt",
          "description": "Successful Refresh Token Revocation",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "ss": {
      "description": "Successful Signup",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/SignupDetails"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "ss",
          "description": "Successful Signup",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "ssa": {
      "description": "Successful Silent Auth",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "auth0_client": {
          "anyOf": [
            {
              "$ref": "#/definitions/Auth0ClientProp"
            },
            {
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "The client or SDK used to do this request, if any. This is based on the `Auth0-Client` HTTP header."
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "allOf": [
            {
              "$ref": "#/definitions/AuthDetailsBase"
            }
          ]
        },
        "hostname": {
          "description": "The hostname associated with the request. For forwarded requests, this should resolve to the original hostname. For failure logs, this may include invalid hostnames.",
          "type": "string"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of the organization related to this auth flow or action, when applicable. For failure logs, the value may be a valid ID, and invalid ID, or any other string.",
          "type": "string"
        },
        "organization_name": {
          "description": "Name of the organization in `organization_id`, when applicable and valid. May be an empty string.",
          "type": "string"
        },
        "session_connection": {
          "type": "string"
        },
        "type": {
          "const": "ssa",
          "description": "Successful Silent Auth",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "auth0_client",
        "client_name",
        "description",
        "details",
        "hostname",
        "ip",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sui": {
      "description": "Successful Users Import",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "connection": {
              "type": "string"
            },
            "tenant": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "type": {
          "const": "sui",
          "description": "Successful Users Import",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "details",
        "log_id",
        "type"
      ],
      "type": "object"
    },
    "sv": {
      "description": "Successfully consumed email verification link",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "tenant": {
                  "type": "string"
                },
                "ticket": {
                  "type": "string"
                }
              },
              "required": [
                "tenant",
                "ticket"
              ],
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "query": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": "string"
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "resultUrl": {
                  "type": "string"
                },
                "tenant": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "connection",
                "email",
                "idp_user_id",
                "includeEmailInRedirect",
                "resultUrl",
                "tenant",
                "user_id"
              ],
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "sv",
          "description": "Successful Verification Email",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "svr": {
      "description": "Successfully called verification email endpoint. Verification email has been queued for sending.",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "body": {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "connection": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "idp_user_id": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "includeEmailInRedirect": {
                  "type": "boolean"
                },
                "job_id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "resultUrl": {
                  "type": "string"
                },
                "template": {
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "tenant": {
                  "type": "string"
                },
                "to": {
                  "type": "string"
                },
                "ttl_sec": {
                  "type": "number"
                },
                "user_id": {
                  "type": "string"
                },
                "verificationUrl": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "svr",
          "description": "Successful Verification Email Request",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "ublkdu": {
      "description": "User block setup by anomaly detection has been released",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "email": {
              "type": "string"
            },
            "query": {
              "type": "object"
            },
            "request": {
              "type": "object"
            },
            "response": {
              "type": "object"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "type": {
          "const": "ublkdu",
          "description": "User login block released",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    },
    "w": {
      "description": "A warning has happened during a login flow",
      "properties": {
        "$event_schema": {
          "description": "Event schema meta",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaMeta"
            }
          ]
        },
        "audience": {
          "description": "The audience in the JWT associated with the request.",
          "type": "string"
        },
        "client_id": {
          "description": "Client related to the API call. Clients are also called applications. The underlying application may not be owned by your tenant and may not be accessible. For failure logs, this may be a valid ID, an invalid one, or any ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_name": {
          "description": "Client name associated with the client_id, when available. May be empty string.",
          "type": "string"
        },
        "connection": {
          "description": "Name of the connection, when available. The connection here matches the `connection_id` field.",
          "type": "string"
        },
        "connection_id": {
          "description": "ID of the connection on which the auth flow is happening or connection of the user doing the action, when applicable. For failure logs this field may contain an invalid ID.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event. This can also contain a description of the issue for failure logs.",
          "type": "string"
        },
        "details": {
          "description": "Log details",
          "properties": {
            "credentials_tenant": {
              "type": "string"
            },
            "host_tenant": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "opts": {
              "properties": {
                "search": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "original_profile": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "referer": {
              "type": "string"
            },
            "request": {
              "type": "object"
            },
            "response": {
              "type": "object"
            },
            "session_id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ip": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPV4"
            },
            {
              "$ref": "#/definitions/IPV6"
            }
          ],
          "description": "The IP address associated with the request. For an auth related log this should be the end user IP. For a machine-to-machine auth flow this should be the IP of the computer doing the authentication. For management logs like `sapi` and `mgmt_api_read` this should be the IP of the admin using the manage dashboard."
        },
        "log_id": {
          "description": "Log id",
          "type": "string"
        },
        "mtls_thumbprint_sha256": {
          "description": "Representation of the client certificate used to authenticate the client as per RFC 8705 section 3.1. Only included in authorization and token exchanges using mtls as a client authentication method.",
          "type": "string"
        },
        "scope": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "List of scopes in the JWT, either as an array like `[\"read:logs\",\"read:users\"]` or a space-separated list of scopes like `read:logs read:users delete:clients`"
        },
        "strategy": {
          "description": "Strategy of the connection in `connection_id`, when applicable and valid. This may be empty string.",
          "examples": [
            [
              "auth0",
              "waad",
              "oktawic",
              "google-oauth2"
            ]
          ],
          "type": "string"
        },
        "strategy_type": {
          "description": "Category of the strategy in `strategy`, when applicable. This may be empty string.",
          "examples": [
            [
              "database",
              "social",
              "enterprise"
            ]
          ],
          "type": "string"
        },
        "tracking_id": {
          "type": "string"
        },
        "type": {
          "const": "w",
          "description": "Warning",
          "type": "string"
        },
        "user_agent": {
          "description": "The user_agent behind this log, when available",
          "examples": [
            "Chrome 120.0.0 / Mac OS X 10.15.7"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user behind the auth flow, or of the user executing the action, whichever applies. For machine to machine auth flows, this field may contain an empty string. For failure logs, the value may be a valid ID, an invalid ID, or empty string",
          "type": "string"
        },
        "user_name": {
          "description": "Username of the user related to the ID is shown in `user_id`, when available. For failure logs, the value may be a valid username, an invalid username, or empty string.",
          "examples": [
            [
              "example@example.com",
              "+14155554321"
            ]
          ],
          "type": "string"
        }
      },
      "required": [
        "audience",
        "client_name",
        "description",
        "details",
        "ip",
        "log_id",
        "strategy",
        "strategy_type",
        "type"
      ],
      "type": "object"
    }
  }
}
